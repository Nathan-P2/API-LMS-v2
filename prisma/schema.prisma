generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model acervo_certificados_novo {
  id_acervo                  Int                                                  @id @default(autoincrement())
  turma_codigo               String                                               @db.VarChar(150)
  grupo_codigo               String?                                              @db.VarChar(25)
  aluno_id                   Int
  aluno_com_projeto          acervo_certificados_novo_aluno_com_projeto?
  aluno_status               acervo_certificados_novo_aluno_status
  qtd_assignments            Int?
  atingiu_meta_assignments   acervo_certificados_novo_atingiu_meta_assignments?
  qtd_deliverables           Int?
  participou_banca           acervo_certificados_novo_participou_banca?
  respondeu_nps              acervo_certificados_novo_respondeu_nps?
  total_certificados         Int?
  atingiu_meta_certificados  acervo_certificados_novo_atingiu_meta_certificados?
  total_presencas            Int?
  atingiu_meta_presencas     acervo_certificados_novo_atingiu_meta_presencas?
  stamp_projeto_excelencia   acervo_certificados_novo_stamp_projeto_excelencia?
  regra_projeto_excelencia   String?                                              @db.Text
  stamp_maior_impacto        acervo_certificados_novo_stamp_maior_impacto?
  regra_maior_impacto        String?                                              @db.Text
  stamp_top_3_projetos       acervo_certificados_novo_stamp_top_3_projetos?
  regra_top_3_projetos       String?                                              @db.Text
  stamp_alunos_honra         acervo_certificados_novo_stamp_alunos_honra?
  regra_alunos_honra         String?                                              @db.Text
  stamp_alunos_excelencia    acervo_certificados_novo_stamp_alunos_excelencia?
  regra_alunos_excelencia    String?                                              @db.Text
  posicao_ranking            Int?
  stamp_top_10_alunos        acervo_certificados_novo_stamp_top_10_alunos?
  stamp_top_5_alunos         acervo_certificados_novo_stamp_top_5_alunos?
  stamp_top_3_alunos         acervo_certificados_novo_stamp_top_3_alunos?
  stamp_top1                 acervo_certificados_novo_stamp_top1?
  certificado_final_liberado acervo_certificados_novo_certificado_final_liberado?
  dthr_create                DateTime                                             @default(now()) @db.DateTime(0)
  dthr_update                DateTime                                             @default(now()) @db.DateTime(0)

  @@unique([aluno_id, turma_codigo], map: "aluno_id")
}

model agenda {
  agenda_id             Int               @id @default(autoincrement())
  agenda_tipo           Int
  agenda_status         Int
  polo_id               Int
  treinamento_id        Int
  agenda_id_antigo      Int
  agenda_full           Int?
  agenda_data_total     String?           @db.Text
  valor_vista           Float?            @db.Float
  valor_prazo           Float?            @db.Float
  vista_ead             Float?            @db.Float
  prazo_ead             Float?            @db.Float
  vista_early           Float?            @db.Float
  prazo_early           Float?            @db.Float
  vista_ead_early       Float?            @db.Float
  prazo_ead_early       Float?            @db.Float
  provi_course_class_id Int?
  data_atualizacao      DateTime          @default(now()) @db.DateTime(0)
  agenda_created_at     DateTime          @default(now()) @db.DateTime(0)
  treinamento           treinamento       @relation(fields: [treinamento_id], references: [treinamento_id], onUpdate: Restrict, map: "agenda_ibfk_1")
  polo                  polo              @relation(fields: [polo_id], references: [polo_id], onUpdate: Restrict, map: "agenda_ibfk_2")
  cupom                 cupom[]
  softcheck_turma       softcheck_turma[]

  @@index([polo_id], map: "polo_id")
  @@index([treinamento_id], map: "treinamento_id")
}

model agenda_versao {
  versao_id                Int                          @id @default(autoincrement())
  agenda_id                Int?
  versao_tipo              agenda_versao_versao_tipo?
  versao_status            agenda_versao_versao_status?
  versao_criacao           DateTime                     @default(now()) @db.DateTime(0)
  agenda_versao_updated_at DateTime                     @default(now()) @db.DateTime(0)
}

model aluno {
  aluno_id                   Int                          @id @default(autoincrement())
  aluno_nome                 String                       @db.VarChar(300)
  aluno_email                String?                      @db.VarChar(300)
  aluno_cpf                  String?                      @db.VarChar(300)
  aluno_status_matricula     Int?
  aluno_telefone             String?                      @db.VarChar(300)
  aluno_polo                 Int?
  aluno_coins                Int?
  aluno_cep                  String?                      @db.Text
  aluno_bairro               String?                      @db.Text
  aluno_endereco             String?                      @db.Text
  aluno_numero               String?                      @db.Text
  aluno_cidade               String?                      @db.Text
  aluno_estado               String?                      @db.Text
  aluno_complemento          String?                      @db.Text
  aluno_cargo                String?                      @db.Text
  aluno_empresa              String?                      @db.Text
  aluno_login                String?                      @db.Text
  aluno_senha                String?                      @db.Text
  aluno_faculdade            String?                      @db.Text
  aluno_proximo_passo        String?                      @db.Text
  aluno_status               String?                      @db.Text
  aluno_termos               Int?
  aluno_data_nascimento      DateTime?                    @db.Date
  aluno_publico              Boolean?
  aluno_proposta             Boolean?
  aluno_comunidade_publico   Boolean?
  aluno_pretensao_salarial   String?                      @db.Text
  aluno_sexo                 String?                      @db.Text
  aluno_mostrar_sexo         Boolean?
  aluno_viajar               Boolean?
  aluno_mudar                Boolean?
  aluno_proposta_fora        Boolean?
  aluno_linkedin             String?                      @db.Text
  aluno_pitch                String?                      @db.Text
  usuario_tipo               String?                      @default("aluno") @db.VarChar(255)
  aluno_enotas_id            String?                      @db.Text
  aluno_criacao_data         DateTime                     @default(now()) @db.Timestamp(0)
  aluno_updated_at           DateTime                     @default(now()) @db.DateTime(0)
  aluno_credencial           aluno_credencial[]
  carrinho                   carrinho[]
  controle_alunos_empregados controle_alunos_empregados[]
  frm_response               frm_response[]
  indique                    indique[]
  lms_acesso                 lms_acesso[]
  lms_caderno                lms_caderno[]
  lms_conteudo_avaliacao     lms_conteudo_avaliacao[]
  lms_conteudo_conclusao     lms_conteudo_conclusao[]
  lms_credencial             lms_credencial[]
  lms_play_log               lms_play_log[]
  lms_primeiros_passos_aluno lms_primeiros_passos_aluno[]
  lms_watch_log              lms_watch_log[]
  monday_cs_acompanhamento   monday_cs_acompanhamento[]
  monday_cs_linkedin         monday_cs_linkedin[]
  pontuacao                  pontuacao[]
  presencas                  presencas[]
  score_entrega_aluno        score_entrega_aluno[]
  score_lab                  score_lab[]
  score_presenca             score_presenca[]
  score_presenca_banca       score_presenca_banca[]
  score_prova                score_prova[]
  score_ranking              score_ranking[]
  score_tarefa               score_tarefa[]
  softcheck_avaliacao        softcheck_avaliacao[]

  @@index([aluno_cpf], map: "aluno_cpf_idx")
  @@index([aluno_email], map: "aluno_email_idx")
  @@index([aluno_id], map: "aluno_id")
}

model aluno_credencial {
  aluno_credencial_id         Int      @id @default(autoincrement())
  aluno_id                    Int
  aluno_senha                 String   @db.VarChar(300)
  data_criacao                DateTime @default(now()) @db.Timestamp(0)
  aluno_credencial_updated_at DateTime @default(now()) @db.DateTime(0)
  aluno                       aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "aluno_credencial_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
}

model aluno_credencial_redefinicao {
  redefinicao_id                    Int       @id @default(autoincrement())
  aluno_id                          Int
  redefinicao_token                 String    @db.Text
  redefinicao_token_status          Int
  redefinicao_data_criacao          DateTime? @db.DateTime(0)
  credencial_redefinicao_created_at DateTime  @default(now()) @db.DateTime(0)
  credencial_redefinicao_updated_at DateTime  @default(now()) @db.DateTime(0)
}

model aluno_endereco {
  aluno_endereco_id         Int      @id @default(autoincrement())
  aluno_id                  Int
  aluno_cep                 String?  @db.VarChar(45)
  aluno_bairro              String?  @db.VarChar(60)
  aluno_endereco            String?  @db.VarChar(150)
  aluno_numero              String?  @db.VarChar(45)
  aluno_cidade              String?  @db.VarChar(60)
  aluno_estado              String?  @db.VarChar(45)
  aluno_complemento         String?  @db.VarChar(60)
  endereco_entrega          Int      @default(0)
  data_criacao              DateTime @default(now()) @db.DateTime(0)
  aluno_endereco_updated_at DateTime @default(now()) @db.DateTime(0)
}

model alunos_sem_compras {
  aluno_id                      Int       @id @unique(map: "aluno_id_UNIQUE") @default(autoincrement())
  aluno_nome                    String    @db.VarChar(300)
  aluno_email                   String    @db.VarChar(300)
  aluno_cpf                     String?   @db.VarChar(300)
  aluno_telefone                String    @db.VarChar(300)
  aluno_polo                    Int?
  aluno_coins                   Int?
  aluno_cep                     String?   @db.Text
  aluno_bairro                  String?   @db.Text
  aluno_endereco                String?   @db.Text
  aluno_numero                  String?   @db.Text
  aluno_cidade                  String?   @db.Text
  aluno_estado                  String?   @db.Text
  aluno_complemento             String?   @db.Text
  aluno_cargo                   String?   @db.Text
  aluno_empresa                 String?   @db.Text
  aluno_login                   String?   @db.Text
  aluno_senha                   String?   @db.Text
  aluno_faculdade               String?   @db.Text
  aluno_proximo_passo           String?   @db.Text
  aluno_status                  String?   @db.Text
  aluno_termos                  Int?
  aluno_data_nascimento         DateTime? @db.Date
  aluno_publico                 Boolean?
  aluno_proposta                Boolean?
  aluno_comunidade_publico      Boolean?
  aluno_pretensao_salarial      String?   @db.Text
  aluno_sexo                    String?   @db.Text
  aluno_mostrar_sexo            Boolean?
  aluno_viajar                  Boolean?
  aluno_mudar                   Boolean?
  aluno_proposta_fora           Boolean?
  aluno_linkedin                String?   @db.Text
  aluno_pitch                   String?   @db.Text
  usuario_tipo                  String?   @default("aluno") @db.VarChar(255)
  aluno_enotas_id               String?   @db.Text
  aluno_criacao_data            DateTime  @default(now()) @db.Timestamp(0)
  alunos_sem_compras_updated_at DateTime  @default(now()) @db.DateTime(0)

  @@index([aluno_id], map: "aluno_id")
}

model blackfriday_typeform_resposta {
  resposta_id    Int      @id @default(autoincrement())
  resposta_nome  String   @db.Text
  resposta_email String   @db.Text
  resposta_idade Int
  resposta_area  String   @db.Text
  resposta_score Int
  aluno_id       Int?
  conhecia_dnc   Boolean
  utm_medium     String?  @db.Text
  utm_campaign   String?  @db.Text
  utm_source     String?  @db.Text
  create_dthr    DateTime @default(now()) @db.DateTime(0)
  update_dthr    DateTime @default(now()) @db.DateTime(0)
}

model blackfriday_typeform_resposta_link {
  resposta_link_id Int      @id @default(autoincrement())
  resposta_id      Int
  resposta_link    String   @db.Text
  agenda_id_antigo Int
  create_dthr      DateTime @default(now()) @db.DateTime(0)
  update_dthr      DateTime @default(now()) @db.DateTime(0)
}

model blackfriday_typeform_resposta_tipo {
  blackfriday_typeform_resposta_tipo_id Int      @id @default(autoincrement())
  area                                  String   @db.Text
  pergunta                              String   @db.Text
  status                                Boolean
  resposta_id                           Int
  typeform_resposta_tipo_created_at     DateTime @default(now()) @db.DateTime(0)
  typeform_resposta_tipo_updated_at     DateTime @default(now()) @db.DateTime(0)
}

model boletim {
  boletim_id         Int      @id @default(autoincrement())
  turma_codigo       String   @unique(map: "turma_codugo_UNIQUE") @db.VarChar(45)
  slot1              Float?   @db.Float
  slot2              Float?   @db.Float
  slot3              Float?   @db.Float
  slot4              Float?   @db.Float
  slot5              Float?   @db.Float
  slot6              Float?   @db.Float
  slot7              Float?   @db.Float
  slot8              Float?   @db.Float
  slot9              Float?   @db.Float
  slot10             Float?   @db.Float
  slot11             Float?   @db.Float
  slot12             Float?   @db.Float
  slot13             Float?   @db.Float
  slot14             Float?   @db.Float
  boletim_created_at DateTime @default(now()) @db.DateTime(0)
  boletim_updated_at DateTime @default(now()) @db.DateTime(0)
}

model carrinho {
  carrinho_id                Int                                  @id @default(autoincrement())
  carrinho_valor             String?                              @db.VarChar(30)
  carrinho_forma             Int?
  carrinho_status            String?                              @db.Text
  carrinho_finalizado        Int?
  carrinho_data              String?                              @db.VarChar(20)
  carrinho_data_final        String?                              @db.Text
  carrinho_lead              String?                              @db.VarChar(100)
  aluno_id                   Int?
  carrinho_idpagarme         Int?
  provi_id                   Int?
  banner                     String?                              @db.VarChar(255)
  utm_source                 String?                              @db.VarChar(255)
  utm_medium                 String?                              @db.VarChar(255)
  utm_campaign               String?                              @db.VarChar(255)
  utm_content                String?                              @db.VarChar(255)
  lead                       String?                              @db.VarChar(250)
  carrinho_status_notafiscal carrinho_carrinho_status_notafiscal?
  enotas_venda_id            String?                              @db.VarChar(255)
  carrinho_dthr_atualizacao  DateTime                             @default(now()) @db.DateTime(0)
  carrinho_subscription_id   String?                              @db.Text
  aluno                      aluno?                               @relation(fields: [aluno_id], references: [aluno_id], onDelete: Restrict, onUpdate: Restrict, map: "carrinho_ibfk_1")
  carrinho_dois_pagamentos   carrinho_dois_pagamentos[]
  carrinho_servico           carrinho_servico[]

  @@index([aluno_id], map: "aluno_id")
}

model carrinho_avaliacao {
  carrinho_avaliacao_id         Int      @id @default(autoincrement())
  av1                           String?  @db.VarChar(45)
  carrinho_avaliacao_created_at DateTime @default(now()) @db.DateTime(0)
  carrinho_avaliacao_updated_at DateTime @default(now()) @db.DateTime(0)
}

model carrinho_dois_pagamentos {
  carrinho_dois_pagamentos_id         Int      @id @default(autoincrement())
  carrinho_id                         Int
  cobranca_id1                        String   @db.VarChar(45)
  valor1                              Float    @db.Float
  status1                             String   @db.VarChar(45)
  forma1                              String?  @db.VarChar(45)
  cobranca_id2                        String?  @db.VarChar(45)
  valor2                              Float?   @db.Float
  status2                             String?  @db.VarChar(45)
  forma2                              String?  @db.VarChar(45)
  data_criacao                        DateTime @default(now()) @db.DateTime(0)
  data_atualizacao                    DateTime @default(now()) @db.DateTime(0)
  carrinho_dois_pagamentos_created_at DateTime @default(now()) @db.DateTime(0)
  carrinho_dois_pagamentos_updated_at DateTime @default(now()) @db.DateTime(0)
  carrinho                            carrinho @relation(fields: [carrinho_id], references: [carrinho_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_carrinho")

  @@index([carrinho_id], map: "fk_carrinho_idx")
}

model carrinho_etapa {
  etapa_id                  Int      @id @default(autoincrement())
  etapa_cadastro            Int?     @default(0)
  etapa_endereco            Int?     @default(0)
  etapa_cartao              Int?     @default(0)
  etapa_boleto              Int?     @default(0)
  etapa_pix                 Int?     @default(0)
  etapa_provi               Int?     @default(0)
  etapa_conclusao           Int?     @default(0)
  visita_id                 Int
  carrinho_etapa_created_at DateTime @default(now()) @db.DateTime(0)
  carrinho_etapa_updated_at DateTime @default(now()) @db.DateTime(0)
}

model carrinho_forma {
  carrinho_forma_id         Int      @id
  carrinho_forma_descricao  String?  @db.VarChar(300)
  carrinho_forma_created_at DateTime @default(now()) @db.DateTime(0)
  carrinho_forma_updated_at DateTime @default(now()) @db.DateTime(0)
}

model carrinho_processamento {
  processamento_id                  Int      @id @default(autoincrement())
  carrinho_temp_id                  Int?
  carrinho_id                       Int
  processamento_retorno             String   @db.Text
  processamento_json_envio          Json?
  processamento_json                Json?
  processamento_data                DateTime @default(now()) @db.DateTime(0)
  carrinho_processamento_updated_at DateTime @default(now()) @db.DateTime(0)
}

model carrinho_servico {
  servico_id                         Int       @id @default(autoincrement())
  carrinho_id                        Int
  aluno_id                           Int
  servico_status                     Int
  servico_gratuito                   Int
  servico_pagante                    Int?      @default(0)
  parcela_ultima_data                DateTime? @db.DateTime(0)
  servico_cancelado                  Int       @default(0)
  servico_data_cancelado_solicitacao DateTime? @db.DateTime(0)
  servico_data_cancelado_efetivado   DateTime? @db.DateTime(0)
  parcela_pagarme_id                 Int?
  servico_pagarme_id                 Int?
  servico_pagante_data               DateTime? @db.DateTime(0)
  servico_data_created               DateTime  @default(now()) @db.DateTime(0)
  servico_data_updated               DateTime  @default(now()) @db.DateTime(0)
  empresa_id                         Int
  carrinho                           carrinho  @relation(fields: [carrinho_id], references: [carrinho_id], onUpdate: Restrict, map: "carrinho_servico_ibfk_1")

  @@index([carrinho_id], map: "carrinho_id")
}

model carrinho_servico_parcela {
  parcela_id           Int      @id @default(autoincrement())
  servico_id           Int
  parcela_valor        Float    @db.Float
  parcela_status       Int
  parcela_pagarme_id   Int?
  parcela_data_created DateTime @default(now()) @db.DateTime(0)
  parcela_data_updated DateTime @default(now()) @db.DateTime(0)
}

model carrinho_temporario {
  carrinho_temp_id                 Int      @id @default(autoincrement())
  card_hash                        String   @db.Text
  forma_pagamento                  Int
  aluno_id                         Int
  parcela_quantidade               Int
  carrinho_temporario_data_criacao DateTime @default(now()) @db.DateTime(0)
  carrinho_temporario_data_update  DateTime @default(now()) @db.DateTime(0)
  carrinho_id                      Int?
  utm_source                       String?  @db.VarChar(255)
  utm_medium                       String?  @db.VarChar(255)
  utm_campaign                     String?  @db.VarChar(255)
  lead                             String?  @db.VarChar(250)
  utm_content                      String?  @db.VarChar(255)
}

model carrinho_visita {
  visita_id                  Int      @id @default(autoincrement())
  visita_cpf                 String   @db.VarChar(20)
  visita_nome                String   @db.VarChar(255)
  visita_email               String   @db.VarChar(255)
  visita_telefone            String   @db.VarChar(30)
  visita_cep                 Int
  visita_endereco            String   @db.VarChar(255)
  visita_cidade              String   @db.VarChar(255)
  visita_numero              Int
  visita_array               String   @db.Text
  visita_data                DateTime @default(now()) @db.DateTime(0)
  carrinho_visita_updated_at DateTime @default(now()) @db.DateTime(0)
}

model carrinho_visita_new {
  visita_id                      Int      @id @default(autoincrement())
  visita_nome                    String   @db.VarChar(300)
  visita_email                   String   @db.VarChar(300)
  visita_telefone                String   @db.VarChar(300)
  aluno_id                       Int?
  carrinho_temp_id               Int?
  visita_data                    DateTime @default(now()) @db.Timestamp(0)
  carrinho_visita_new_updated_at DateTime @default(now()) @db.DateTime(0)
}

model catraca_codigo {
  codigo_id            Int                @id
  profissional_id      Int?
  nome_usuario_catraca String?            @db.VarChar(1000)
  codigo_created_at    DateTime?          @default(now()) @db.DateTime(0)
  codigo_updated_at    DateTime?          @default(now()) @db.DateTime(0)
  dnc_profissionais    dnc_profissionais? @relation(fields: [profissional_id], references: [profissional_id], onDelete: Cascade, map: "catraca_codigo_ibfk_1")

  @@index([profissional_id], map: "catraca_codigo_ibfk_1")
}

model catraca_presenca {
  presenca_id         Int       @id @default(autoincrement())
  codigo_id           Int?
  data_registro       DateTime? @db.DateTime(0)
  presenca_updated_at DateTime? @default(now()) @db.DateTime(0)

  @@index([codigo_id], map: "codigo_id")
}

model certificado_acervo {
  certificado_id                       Int       @id @default(autoincrement())
  aluno_id                             Int
  turma_codigo                         String    @db.VarChar(100)
  grupo_codigo                         String?   @db.Text
  certificado_prova_data               String?   @db.Text
  certificado_prova_numero             Int?
  certificado_prova_carga              Int?
  certificado_prova_nome               String?   @db.VarChar(200)
  certificado_data_validade            String?   @db.VarChar(255)
  certificado_url_thumb                String?   @db.VarChar(255)
  certificado_url_bg                   String?   @db.VarChar(255)
  certificado_stamp_projeto_excelencia Int?
  certificado_stamp_maior_impacto      Int?
  certificado_stamp_top_3_projetos     Int?
  certificado_stamp_top_projeto        Int?
  certificado_stamp_aluno_honra        Int?
  certificado_stamp_aluno_excelencia   Int?
  certificado_stamp_top_10_aluno       Int?
  certificado_stamp_top_5_aluno        Int?
  certificado_stamp_top_3_aluno        Int?
  certificado_url_pdf                  String?   @db.Text
  certificado_arquivo                  Bytes?    @db.Blob
  certificado_status                   Int?
  regra1                               Int?
  regra2                               Int?
  regra3                               Int?
  regra4                               Int?
  regra5                               Int?
  regra6                               Int?
  presencas_aluno_softcheck            Int?
  presenca_multipla                    Int?
  certificado_dthr_geracao             DateTime? @default(now()) @db.DateTime(0)
  certificado_dthr_update              DateTime? @default(now()) @db.Timestamp(0)
}

model certificado_configuracao {
  id                                  Int         @id @default(autoincrement())
  treinamento_id                      Int
  red                                 Int
  green                               Int
  blue                                Int
  modelo_certificado                  String      @db.VarChar(200)
  certificado_configuracao_created_at DateTime    @default(now()) @db.DateTime(0)
  certificado_configuracao_updated_at DateTime    @default(now()) @db.DateTime(0)
  treinamento                         treinamento @relation(fields: [treinamento_id], references: [treinamento_id], map: "fk_treinamento")

  @@index([treinamento_id], map: "fk_treinamento")
}

model compra {
  compra_id         Int      @id @default(autoincrement())
  compra_valor      String   @db.Text
  compra_tag        String?  @db.Text
  cupom_id          Int?
  indicante_id      Int?
  agenda_id         Int
  carrinho_id       Int
  versao_id         Int?
  compra_created_at DateTime @default(now()) @db.DateTime(0)
  compra_updated_at DateTime @default(now()) @db.DateTime(0)
  cupom             cupom?   @relation(fields: [cupom_id], references: [cupom_id], onDelete: Restrict, onUpdate: Restrict, map: "compra_ibfk_1")

  @@index([cupom_id], map: "cupom_id")
}

model compra_temporaria {
  compra_temp_id          Int      @id @default(autoincrement())
  agenda_id_antigo        Int
  compra_valor_final      Float    @db.Float
  compra_valor_normal     Float    @db.Float
  cupom_early             Int?
  cupom_codigo            String?  @db.Text
  cupom_desconto          Float?   @db.Float
  data_inicio             String   @db.Text
  carrinho_temp_id        Int
  compra_data_criacao     DateTime @default(now()) @db.DateTime(0)
  compra_data_atualizacao DateTime @db.DateTime(0)
  compra_updated_at       DateTime @default(now()) @db.DateTime(0)
}

model controle_alunos_empregados {
  controle_alunos_empregados_id Int      @id @default(autoincrement())
  aluno_id                      Int
  empregado                     Int      @default(0) @db.TinyInt
  turma_codigo                  String   @db.Text
  alunos_empregados_created_at  DateTime @default(now()) @db.DateTime(0)
  alunos_empregados_updated_at  DateTime @default(now()) @db.DateTime(0)
  aluno                         aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "controle_alunos_empregados_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
}

model controle_avaliacao {
  controle_avaliacao_id              Int       @id @unique(map: "controle_avaliacao_id") @default(autoincrement())
  turma_id                           Int
  tipo_id                            Int
  controle_avaliacao_status          Int
  controle_avaliacao_data_abertura   DateTime? @db.Timestamp(0)
  controle_avaliacao_data_fechamento DateTime? @db.Timestamp(0)
  controle_avaliacao_created_at      DateTime  @default(now()) @db.DateTime(0)
  controle_avaliacao_updated_at      DateTime  @default(now()) @db.DateTime(0)
}

model controle_geral {
  controle_id                    Int                                           @id @default(autoincrement())
  turma_codigo                   String                                        @unique(map: "turma_codigo_UNIQUE") @db.VarChar(150)
  controle_aviso_provas          controle_geral_controle_aviso_provas          @default(NL)
  controle_libera_prova          controle_geral_controle_libera_prova          @default(NL)
  controle_atualizacao_presencas controle_geral_controle_atualizacao_presencas @default(NL)
  controle_atualizacao_ranking   controle_geral_controle_atualizacao_ranking   @default(NL)
  controle_popula_certificado    controle_geral_controle_popula_certificado    @default(NL)
  controle_exibicao_turma        controle_geral_controle_exibicao_turma        @default(NL)
  controle_exec_scripts          controle_geral_controle_exec_scripts          @default(OK)
  controle_dthr_log              DateTime                                      @default(now()) @db.DateTime(0)
  controle_geral_updated_at      DateTime                                      @default(now()) @db.DateTime(0)

  @@index([turma_codigo], map: "turma_codigo")
}

model controle_sala {
  controle_sala_id         Int      @id @default(autoincrement())
  sala_consultor_1         Int
  sala_consultor_2         Int
  sala_fac_excel_1         Int
  sala_fac_excel_2         Int
  sala_fac_excel_3         Int
  sala_fac_excel_4         Int
  sala_fac_mini_1          Int
  sala_fac_mini_2          Int
  sala_fac_mini_3          Int
  sala_fac_mini_4          Int
  sala_fac_geral_1         Int
  sala_fac_geral_2         Int
  sala_fac_geral_3         Int
  sala_fac_geral_4         Int
  sala_fac_geral_5         Int
  sala_fac_geral_6         Int
  sala_fac_geral_7         Int
  sala_fac_geral_8         Int
  controle_sala_created_at DateTime @default(now()) @db.DateTime(0)
  controle_sala_updated_at DateTime @default(now()) @db.DateTime(0)
}

model controle_tarefa {
  tarefa_id                  Int      @id @unique(map: "tarefa_id") @default(autoincrement())
  tarefa_numero              Int
  turma_codigo               String   @db.VarChar(255)
  tarefa_bloqueada           Int
  tarefa_gabarito_url        String?  @db.Text
  data_modificacao           DateTime @default(now()) @db.DateTime(0)
  controle_tarefa_created_at DateTime @default(now()) @db.DateTime(0)
}

model conversao {
  conv_id              Int       @id @default(autoincrement())
  conv_identificador   String?   @db.VarChar(300)
  conv_utm_medium      String?   @db.VarChar(300)
  conv_utm_source      String?   @db.VarChar(300)
  conv_utm_campaign    String?   @db.VarChar(300)
  conv_utm_origem_lead String?   @db.VarChar(300)
  conv_utm_data        String?   @db.VarChar(300)
  lead_id              Int
  conv_data            DateTime? @db.DateTime(0)
  conversao_created_at DateTime  @default(now()) @db.DateTime(0)
  conv_updated_at      DateTime  @default(now()) @db.DateTime(0)

  @@unique([conv_data, lead_id], map: "indice_conversao")
  @@index([conv_identificador], map: "conv_identificador_idx")
  @@index([conv_utm_medium], map: "conv_utm_medium_idx")
  @@index([conv_utm_source], map: "conv_utm_source_idx")
}

model cupom {
  cupom_id             Int      @id @default(autoincrement())
  cupom_codigo         String   @db.VarChar(100)
  cupom_desconto       String   @db.Text
  cupom_optional       String   @db.VarChar(300)
  cupom_value          String?  @db.VarChar(300)
  cupom_limite         Int?
  cupom_qtd_disponivel Int?
  cupom_status         Int?
  agenda_id            Int?
  cupom_log_dthr       DateTime @default(now()) @db.DateTime(0)
  cupom_updated_at     DateTime @default(now()) @db.DateTime(0)
  compra               compra[]
  agenda               agenda?  @relation(fields: [agenda_id], references: [agenda_id], onDelete: Restrict, onUpdate: Restrict, map: "cupom_ibfk_1")

  @@index([agenda_id], map: "agenda_id")
  @@index([cupom_codigo], map: "cupom_codigo_idx")
}

model cx_engajamento_slot {
  turma_codigo                   String    @db.VarChar(10)
  aluno_id                       Int
  slot                           Int
  data_final_slot                DateTime? @db.Date
  qtd_aulas_assistidas           Int?
  qtd_aulas_slot                 Int?
  qtd_assignments_entregues      Int?
  qtd_assignments_slot           Int?
  qtd_presenca                   Int?
  qtd_days_slot                  Int?
  cx_engajamento_slot_created_at DateTime  @default(now()) @db.DateTime(0)
  cx_engajamento_slot_updated_at DateTime  @default(now()) @db.DateTime(0)

  @@id([aluno_id, slot, turma_codigo])
}

model data {
  data_id            Int                      @id @default(autoincrement())
  data_dia           Int
  data_mes           Int
  data_ano           Int
  horario_inicio_day String?                  @db.VarChar(10)
  data_hotel         String                   @db.Text
  consultor_id       Int
  data_refer_id      Int
  agenda_id          Int
  data_tipo_dinamica data_data_tipo_dinamica?
  data_tipo_grupo    data_data_tipo_grupo?    @default(Projeto)
  softcheck_tipo_id  Int?
  data_created_at    DateTime                 @default(now()) @db.DateTime(0)
  data_updated_at    DateTime                 @default(now()) @db.DateTime(0)
}

model dim_datas {
  data_id              Int      @id
  db_data              DateTime @unique(map: "datas_dbdata_idx") @db.Date
  ano                  Int
  mes                  Int
  dia                  Int
  trimestre            Int
  semana               Int
  dia_semana_seg       Int
  dia_semana_dom       Int
  dia_nome             String   @db.VarChar(9)
  dia_nome_ptbr        String   @db.VarChar(13)
  mes_nome             String   @db.VarChar(9)
  mes_nome_ptbr        String   @db.VarChar(9)
  feriado_flag         String?  @default("f") @db.Char(1)
  fim_semana_flag      String?  @default("f") @db.Char(1)
  evento               String?  @db.VarChar(50)
  dim_datas_created_at DateTime @default(now()) @db.DateTime(0)
  dim_datas_updated_at DateTime @default(now()) @db.DateTime(0)

  @@unique([ano, mes, dia], map: "datas_amd_idx")
}

model dnc_cidades {
  cidade_id              Int                 @id @default(autoincrement())
  cidade_nome            String              @db.VarChar(100)
  cidade_valor_vt        Float               @db.Float
  dnc_cidades_created_at DateTime            @default(now()) @db.DateTime(0)
  dnc_cidades_updated_at DateTime            @default(now()) @db.DateTime(0)
  dnc_profissionais      dnc_profissionais[]
}

model dnc_configuracao_nfe {
  configuracao_id                 Int      @id @default(autoincrement())
  configuracao_nome               String?  @db.VarChar(255)
  configuracao_valor              String?  @db.VarChar(255)
  configuracao_comentario         String?  @db.Text
  configuracao_dthr_update        DateTime @default(now()) @db.DateTime(0)
  dnc_configuracao_nfe_created_at DateTime @default(now()) @db.DateTime(0)
}

model dnc_dashtv_configuracao {
  dashtv_id                          Int                                   @id
  dashtv_usuario                     String                                @db.VarChar(150)
  dashtv_senha                       String                                @db.Text
  dashtv_titulo                      String                                @db.VarChar(150)
  dashtv_descricao                   String                                @db.Text
  dashtv_intervalo_transicao         Int
  dashtv_intervalo_refresh           Int
  dashtv_status                      dnc_dashtv_configuracao_dashtv_status
  dnc_dashtv_configuracao_created_at DateTime                              @default(now()) @db.DateTime(0)
  dnc_dashtv_configuracao_updated_at DateTime                              @default(now()) @db.DateTime(0)
  dnc_dashtv_urls                    dnc_dashtv_urls[]
}

model dnc_dashtv_urls {
  dashtv_url_id              Int                            @id @default(autoincrement())
  dashtv_id                  Int
  dashtv_tipo                dnc_dashtv_urls_dashtv_tipo?
  dashtv_url                 String?                        @db.Text
  dashtv_tempo               Int
  dashtv_status              dnc_dashtv_urls_dashtv_status?
  dnc_dashtv_urls_created_at DateTime                       @default(now()) @db.DateTime(0)
  dnc_dashtv_urls_updated_at DateTime                       @default(now()) @db.DateTime(0)
  dnc_dashtv_configuracao    dnc_dashtv_configuracao        @relation(fields: [dashtv_id], references: [dashtv_id], onDelete: Cascade, map: "dashtv_id")

  @@index([dashtv_id], map: "dashtv_id")
}

model dnc_empresa_nfe {
  empresa_nfe_id                         Int                                               @id
  empresa_nfe_cnpj                       Int?
  empresa_nfe_inscricao_municipal        String?                                           @db.VarChar(255)
  empresa_nfe_inscricao_estadual         String?                                           @db.VarChar(255)
  empresa_nfe_razao_social               String?                                           @db.VarChar(255)
  empresa_nfe_nome_fantasia              String?                                           @db.VarChar(255)
  empresa_nfe_simples_nacional           dnc_empresa_nfe_empresa_nfe_simples_nacional      @default(false)
  empresa_nfe_email                      String?                                           @db.VarChar(255)
  empresa_nfe_telefone                   String?                                           @db.VarChar(255)
  empresa_nfe_incentivador_cultural      dnc_empresa_nfe_empresa_nfe_incentivador_cultural @default(false)
  empresa_nfe_regime_especial_tributacao String?                                           @db.VarChar(255)
  empresa_nfe_codigo_servico_municipal   String?                                           @db.VarChar(255)
  empresa_nfe_cnae                       String?                                           @db.VarChar(255)
  empresa_nfe_aliquota_iss               Float?                                            @db.Float
  empresa_nfe_descricao_servico          String?                                           @db.Text
  empresa_nfe_codigo_ibge_estado         Int?
  empresa_nfe_codigo_ibge_cidade         Int?
  empresa_nfe_pais                       String?                                           @db.VarChar(255)
  empresa_nfe_uf                         String?                                           @db.VarChar(255)
  empresa_nfe_cidade                     String?                                           @db.VarChar(255)
  empresa_nfe_logradouro                 String?                                           @db.VarChar(255)
  empresa_nfe_numero                     String?                                           @db.VarChar(255)
  empresa_nfe_complemento                String?                                           @db.VarChar(255)
  empresa_nfe_bairro                     String?                                           @db.VarChar(255)
  empresa_nfe_cep                        String?                                           @db.VarChar(255)
  empresa_nfe_dthr                       DateTime                                          @default(now()) @db.DateTime(0)
  dnc_empresa_nfe_updated_at             DateTime                                          @default(now()) @db.DateTime(0)
}

model dnc_help_videos {
  id                         Int        @id @default(autoincrement())
  titulo                     String     @db.VarChar(200)
  squad_id                   Int
  url                        String     @db.VarChar(500)
  status                     Boolean    @default(false)
  dnc_help_videos_created_at DateTime   @default(now()) @db.DateTime(0)
  dnc_help_videos_updated_at DateTime   @default(now()) @db.DateTime(0)
  dnc_squads                 dnc_squads @relation(fields: [squad_id], references: [squad_id], onUpdate: Restrict, map: "dnc_help_videos_ibfk_1")

  @@index([squad_id], map: "squad_id")
}

model dnc_presenca_masp {
  presenca_masp_id             Int                      @id @default(autoincrement())
  profissional_id              Int
  presenca_masp_dthr           DateTime                 @db.Date
  presenca_registro            DateTime                 @default(now()) @db.DateTime(0)
  dnc_presenca_masp_updated_at DateTime                 @default(now()) @db.DateTime(0)
  presenca_masp_agendada       presenca_masp_agendada[]

  @@unique([profissional_id, presenca_masp_dthr], map: "index")
}

model dnc_presenca_studio {
  presenca_studio_id             Int               @id @default(autoincrement())
  profissional_id                Int
  presenca_studio_dthr           DateTime          @db.Date
  presenca_registro              DateTime          @default(now()) @db.DateTime(0)
  dnc_presenca_studio_updated_at DateTime          @default(now()) @db.DateTime(0)
  dnc_profissionais              dnc_profissionais @relation(fields: [profissional_id], references: [profissional_id], onDelete: Cascade, map: "presenca_studio_profissional_id_ibfk1")

  @@index([profissional_id], map: "presenca_studio_profissional_id_ibfk1")
}

model dnc_privilegio_tipo {
  privilegio_tipo_id             Int                      @id @default(autoincrement())
  privilegio_tipo_nome           String                   @db.VarChar(150)
  privilegio_tipo_menu           String                   @db.VarChar(150)
  dnc_privilegio_tipo_created_at DateTime                 @default(now()) @db.DateTime(0)
  dnc_privilegio_tipo_updated_at DateTime                 @default(now()) @db.DateTime(0)
  dnc_privilegios_acesso         dnc_privilegios_acesso[]
}

model dnc_privilegios_acesso {
  privilegio_id                     Int                                          @id @default(autoincrement())
  profissional_id                   Int
  privilegio_tipo_id                Int
  privilegio_status                 dnc_privilegios_acesso_privilegio_status     @default(N)
  privilegio_admin                  dnc_privilegios_acesso_privilegio_admin      @default(N)
  privilegio_financeiro             dnc_privilegios_acesso_privilegio_financeiro @default(N)
  privilegio_operacoes              dnc_privilegios_acesso_privilegio_operacoes  @default(N)
  privilegio_produto                dnc_privilegios_acesso_privilegio_produto    @default(N)
  privilegio_tech                   dnc_privilegios_acesso_privilegio_tech       @default(N)
  privilegio_log                    DateTime                                     @default(now()) @db.DateTime(0)
  dnc_privilegios_acesso_updated_at DateTime                                     @default(now()) @db.DateTime(0)
  dnc_profissionais                 dnc_profissionais                            @relation(fields: [profissional_id], references: [profissional_id], onDelete: Cascade, map: "dnc_privilegios_acesso_ibfk_1")
  dnc_privilegio_tipo               dnc_privilegio_tipo                          @relation(fields: [privilegio_tipo_id], references: [privilegio_tipo_id], map: "fk_tipo_privilegio")

  @@index([profissional_id], map: "dnc_privilegios_acesso_ibfk_1")
  @@index([privilegio_tipo_id], map: "fk_tipo_privilegio")
}

model dnc_profissionais {
  profissional_id             Int                                       @id @default(autoincrement())
  profissional_url_foto       String?                                   @db.Text
  profissional_nome           String?                                   @db.VarChar(255)
  profissional_categoria      dnc_profissionais_profissional_categoria? @default(Interno)
  profissional_staff          dnc_profissionais_profissional_staff?     @default(N)
  profissional_user           String                                    @db.VarChar(255)
  profissional_cpf            String?                                   @db.VarChar(15)
  profissional_rg             String?                                   @db.VarChar(15)
  profissional_email          String?                                   @db.VarChar(100)
  profissional_email_gmail    String?                                   @db.VarChar(150)
  profissional_senha          String                                    @db.Text
  cidade_id                   Int
  profissional_cep            String                                    @db.VarChar(9)
  profissional_endereco       String                                    @db.VarChar(255)
  profissional_estado         String?                                   @db.VarChar(2)
  profissional_end_numero     Int
  profissional_telefone       String?                                   @db.VarChar(20)
  profissional_dt_nasc        DateTime?                                 @db.Date
  profissional_tamanho_camisa String?                                   @db.VarChar(20)
  profissional_tipo_contrato  String?                                   @db.VarChar(50)
  profissional_documento_pj   String?                                   @db.Text
  profissional_cnpj           String?                                   @db.VarChar(50)
  profissional_razao_social   String?                                   @db.VarChar(250)
  adm_id                      Int
  acesso_id                   Int?
  squad_id                    Int?
  profissional_cargo          String?                                   @db.VarChar(150)
  profissional_cargo_id       Int                                       @default(0)
  gestor_id                   Int                                       @default(1)
  profissional_dt_inicio      DateTime?                                 @db.Date
  profissional_dt_desl        DateTime?                                 @db.Date
  profissional_status         dnc_profissionais_profissional_status     @default(A)
  profissional_log_criacao    DateTime                                  @default(now()) @db.DateTime(0)
  profissional_ultacesso      DateTime?                                 @db.DateTime(0)
  profissional_card_id        Int?                                      @unique(map: "profissional_card_id")
  profissional_updated_at     DateTime                                  @default(now()) @db.DateTime(0)
  catraca_codigo              catraca_codigo[]
  dnc_presenca_studio         dnc_presenca_studio[]
  dnc_privilegios_acesso      dnc_privilegios_acesso[]
  dnc_squads                  dnc_squads?                               @relation(fields: [squad_id], references: [squad_id], onDelete: Restrict, map: "dnc_profissionais_ibfk_1")
  lms_acesso                  lms_acesso?                               @relation(fields: [acesso_id], references: [acesso_id], onDelete: Restrict, onUpdate: Restrict, map: "dnc_profissionais_ibfk_2")
  dnc_cidades                 dnc_cidades                               @relation(fields: [cidade_id], references: [cidade_id], map: "fk_cidade_id")
  dnc_profissionais_log       dnc_profissionais_log[]
  presenca_masp_agendada      presenca_masp_agendada[]

  @@index([acesso_id], map: "acesso_id")
  @@index([squad_id], map: "dnc_profissionais_ibfk_1")
  @@index([cidade_id], map: "fk_cidade_id")
}

model dnc_profissionais_cargos {
  profissional_cargo_id               Int      @id @default(autoincrement())
  profissional_cargo_nome             String   @db.VarChar(30)
  dnc_profissionais_cargos_created_at DateTime @default(now()) @db.DateTime(0)
  dnc_profissionais_cargos_updated_at DateTime @default(now()) @db.DateTime(0)
}

model dnc_profissionais_log {
  profissionais_log_id             Int               @id @default(autoincrement())
  profissional_id                  Int
  profissional_log_page            String            @db.Text
  profissional_log_dthr            DateTime          @default(now()) @db.DateTime(0)
  profissional_log_acao            String            @db.Text
  profissional_log_dados           String?           @db.Text
  dnc_profissionais_log_updated_at DateTime          @default(now()) @db.DateTime(0)
  dnc_profissionais                dnc_profissionais @relation(fields: [profissional_id], references: [profissional_id], onDelete: Cascade, map: "profissional_log_profissional_id_ibfk1")

  @@index([profissional_id], map: "profissional_log_profissional_id_ibfk1")
}

model dnc_profissional_nivel {
  profissional_nivel_id             Int      @id @default(autoincrement())
  profissional_nome                 String   @db.VarChar(255)
  dnc_profissional_nivel_created_at DateTime @default(now()) @db.DateTime(0)
  dnc_profissional_nivel_updated_at DateTime @default(now()) @db.DateTime(0)
}

model dnc_regras_notas {
  regra_id                                  Int       @id @default(autoincrement())
  turma_codigo                              String    @unique(map: "turma_codigo_UNIQUE") @db.VarChar(150)
  regra_asn_nota_max                        Float?    @default(0) @db.Float
  regra_asn_qtd                             Int?      @default(0)
  regra_asn_ponto_max_ranking               Float?    @default(0) @db.Float
  regra_del_nota_max                        Float?    @default(0) @db.Float
  regra_del_qtd                             Int?      @default(0)
  regra_del_ponto_max_ranking               Float?    @default(0) @db.Float
  regra_nota_provas_intermediarias          Float?    @default(0) @db.Float
  regra_porcentagem_aprovacao_intermediaria Float?    @default(0) @db.Float
  regra_pi_ponto_ranking                    Int?      @default(0)
  regra_nota_provas_finais                  Float?    @default(0) @db.Float
  regra_porcentagem_aprovacao_final         Float?    @default(0) @db.Float
  regra_pf_ponto_ranking                    Int?      @default(0)
  regra_stp_projeto_excelencia_desc         String?   @db.Text
  regra_stp_projeto_excelencia              Bytes?    @default(dbgenerated("0x30")) @db.Binary(1)
  regra_stp_projeto_maior_impacto_desc      String?   @db.Text
  regra_stp_projeto_maior_impacto           Bytes?    @default(dbgenerated("0x30")) @db.Binary(1)
  regra_stp_top3_projetos_desc              String?   @db.Text
  regra_stp_top3_projetos                   Bytes?    @default(dbgenerated("0x30")) @db.Binary(1)
  regra_stp_alunos_honra_desc               String?   @db.Text
  regra_stp_alunos_honra                    Bytes?    @default(dbgenerated("0x30")) @db.Binary(1)
  regra_stp_alunos_excelencia_desc          String?   @db.Text
  regra_stp_alunos_excelencia               Bytes?    @default(dbgenerated("0x30")) @db.Binary(1)
  regra_stp_top10_desc                      String?   @db.Text
  regra_stp_top10                           Bytes?    @default(dbgenerated("0x30")) @db.Binary(1)
  regra_stp_top5_desc                       String?   @db.Text
  regra_stp_top5                            Bytes?    @default(dbgenerated("0x30")) @db.Binary(1)
  regra_stp_top3_desc                       String?   @db.Text
  regra_stp_top3                            Bytes?    @default(dbgenerated("0x30")) @db.Binary(1)
  regra_banca                               Float?    @default(0) @db.Float
  regra_ne1_titulo                          String?   @db.Text
  regra_ne1_nota                            Float?    @default(0) @db.Float
  regra_ne1_qtd                             Int?      @default(0)
  regra_ne1_ranking                         Int?      @default(0)
  regra_ne2_titulo                          String?   @db.Text
  regra_ne2_nota                            Float?    @default(0) @db.Float
  regra_ne2_qtd                             Int?      @default(0)
  regra_ne2_ranking                         Int?      @default(0)
  regra_pi_qtd                              Int?      @default(0)
  regra_pf_qtd                              Int?      @default(0)
  regra_dthr_criacao                        DateTime? @default(now()) @db.DateTime(0)
  regra_dthr_update                         DateTime? @default(now()) @db.DateTime(0)
  regra_updated_at                          DateTime  @default(now()) @db.DateTime(0)
}

model dnc_squads {
  squad_id          Int                 @id @default(autoincrement())
  squad_nome        String              @db.VarChar(150)
  squad_hibrido     Int
  squad_dias_semana String              @db.VarChar(100)
  squad_log_dthr    DateTime            @default(now()) @db.DateTime(0)
  dnc_help_videos   dnc_help_videos[]
  dnc_profissionais dnc_profissionais[]
}

model estorno {
  estorno_id               Int       @id @default(autoincrement())
  card_id_pipefy           BigInt
  estorno_motivos          String?   @db.Text
  estorno_motivos_outros   String?   @db.Text
  estorno_valor            Float     @db.Float
  metodo_pagamento         String?   @db.VarChar(100)
  estorno_valor_multa      Float?    @db.Float
  estorno_forma            String?   @db.VarChar(100)
  estorno_comentario       String?   @db.Text
  aluno_cpf                String    @db.VarChar(255)
  carrinho_id              Int?
  turma_codigo             String?   @db.Text
  estorno_data_populada    DateTime? @default(now()) @db.DateTime(0)
  estorno_periodo          String?   @db.Text
  estorno_area_solicitante String?   @db.Text
  estorno_status           String?   @db.VarChar(100)
  estorno_data_em_espera   DateTime? @db.DateTime(0)
  estorno_data_andamento   DateTime? @db.DateTime(0)
  estorno_data_efetuado    DateTime? @db.DateTime(0)
  agenda_id                Int?
  estorno_dthr_atualizacao DateTime  @default(now()) @db.DateTime(0)
}

model frm_alternativa {
  alternativa_id             Int      @id @default(autoincrement())
  alternativa_valor          String   @db.VarChar(400)
  alternativa_complemento    String   @db.Text
  alternativa_correta        Int
  alternativa_foto           String?  @db.Text
  alternativa_criacao        DateTime @default(now()) @db.DateTime(0)
  questao_id                 Int
  frm_alternativa_updated_at DateTime @default(now()) @db.DateTime(0)
}

model frm_code_response {
  code_response_id             Int                           @id @default(autoincrement())
  code_codigo                  String                        @db.Text
  code_response                String                        @db.Text
  aluno_id                     Int?
  usuario_email                String?                       @db.Text
  turma_codigo                 String                        @db.VarChar(150)
  type_id                      Int
  questao_id                   Int
  code_status                  frm_code_response_code_status
  code_dthr_log                DateTime                      @default(now()) @db.DateTime(0)
  frm_code_response_updated_at DateTime                      @default(now()) @db.DateTime(0)
}

model frm_material_controle {
  material_controle_id             Int                                            @id @default(autoincrement())
  turma_codigo                     String                                         @db.VarChar(10)
  material_controle_dia            String                                         @db.VarChar(10)
  material_url_servidor            String?                                        @db.VarChar(250)
  material_controle_caminho        String?                                        @db.Text
  material_controle_status         frm_material_controle_material_controle_status @default(L)
  material_controle_dthr           DateTime                                       @default(now()) @db.DateTime(0)
  frm_material_controle_updated_at DateTime                                       @default(now()) @db.DateTime(0)
}

model frm_pasta {
  pasta_id             Int      @id @default(autoincrement())
  pasta_titulo         String   @db.VarChar(200)
  pasta_criacao        DateTime @default(now()) @db.DateTime(0)
  frm_pasta_updated_at DateTime @default(now()) @db.DateTime(0)
}

model frm_questao {
  questao_id              Int            @id @default(autoincrement())
  questao_numero          Int
  questao_enunciado       String         @db.Text
  questao_enunciado_foto  String?        @db.VarChar(200)
  questao_tipo            String         @db.VarChar(30)
  questao_pontos          Float?         @db.Float
  questao_criacao         DateTime       @default(now()) @db.DateTime(0)
  questao_status          Boolean        @default(true)
  questao_feedback        String?        @db.Text
  questao_output_esperado String?        @db.Text
  type_id                 Int
  questao_modificado      DateTime       @default(now()) @db.DateTime(0)
  jumpy_questao_id        Int?
  frm_response            frm_response[]

  @@index([questao_status], map: "questao_status_idx")
}

model frm_response {
  resposta_id             Int         @id @default(autoincrement())
  resposta_selecionada    String      @db.Text
  resposta_output         String?     @db.Text
  resposta_data           DateTime    @default(now()) @db.DateTime(0)
  type_id                 Int
  questao_id              Int
  turma_codigo            String?     @db.Text
  aluno_id                Int?
  day                     Int?
  resposta_gabarito       String?     @db.Text
  resposta_correta        Int?
  slot                    Int?
  modulo                  String?     @db.Text
  curso                   String?     @db.Text
  mes                     Int?
  usuario_email           String?     @db.Text
  processo_correto        Int?
  output_correto          Int?
  frm_response_created_at DateTime    @default(now()) @db.DateTime(0)
  frm_response_updated_at DateTime    @default(now()) @db.DateTime(0)
  aluno                   aluno?      @relation(fields: [aluno_id], references: [aluno_id], onDelete: Restrict, onUpdate: Restrict, map: "frm_response_ibfk_1")
  frm_questao             frm_questao @relation(fields: [questao_id], references: [questao_id], onUpdate: Restrict, map: "frm_response_ibfk_2")
  frm_type                frm_type    @relation(fields: [type_id], references: [type_id], onUpdate: Restrict, map: "frm_response_ibfk_3")

  @@index([aluno_id], map: "aluno_id")
  @@index([curso(length: 300)], map: "curso_idx")
  @@index([day], map: "day_idx")
  @@index([modulo(length: 300)], map: "modulo_idx")
  @@index([questao_id], map: "questao_id")
  @@index([slot], map: "slot_idx")
  @@index([turma_codigo(length: 50)], map: "turma_codigo")
  @@index([type_id], map: "type_id")
}

model frm_type {
  type_id                     Int            @id @default(autoincrement())
  type_titulo                 String         @db.VarChar(200)
  type_categoria              String?        @db.VarChar(200)
  pasta_id                    Int
  objeto_id                   Int?
  type_criacao                DateTime       @default(now()) @db.DateTime(0)
  type_status                 Int            @default(1)
  type_descricao              String?        @db.Text
  type_imagem                 String         @db.Text
  type_material               String         @db.Text
  type_pontuacao_maxima       Int
  type_tempo_prova            Int?
  type_aleatorio              Int
  type_aleatorio_quantidade   Int
  type_turma_codigo_requisito Int            @default(1)
  type_limita_refazer         Int?           @default(0)
  type_refazer_intervalo      Int?
  frm_type_updated_at         DateTime       @default(now()) @db.DateTime(0)
  frm_response                frm_response[]
  lms_conteudo                lms_conteudo[]

  @@index([type_categoria], map: "type_categoria_idx")
  @@index([type_status], map: "type_status_idx")
}

model frm_type_categoria {
  categoria_id                  Int      @id @default(autoincrement())
  categoria_nome                String   @db.Text
  frm_type_categoria_created_at DateTime @default(now()) @db.DateTime(0)
  frm_type_categoria_updated_at DateTime @default(now()) @db.DateTime(0)
}

model hubspot_contact {
  contact_id                                Int                            @id
  name                                      String                         @db.VarChar(200)
  email                                     String?                        @db.VarChar(500)
  phone                                     String?                        @db.VarChar(45)
  analytics_source                          String?                        @db.VarChar(500)
  school_of_interest                        String?                        @db.VarChar(500)
  professional_goal                         String?                        @db.VarChar(500)
  hubspot_score                             Decimal?                       @db.Decimal(15, 2)
  hubspot_owner_id                          Int?
  address                                   String?                        @db.VarChar(500)
  city                                      String?                        @db.VarChar(500)
  state                                     String?                        @db.VarChar(200)
  country                                   String?                        @db.VarChar(500)
  jobtitle                                  String?                        @db.VarChar(500)
  company                                   String?                        @db.VarChar(500)
  industry                                  String?                        @db.VarChar(500)
  num_employees                             String?                        @db.VarChar(500)
  num_conversion_events                     Int?
  num_unique_conversion_events              Int?
  analytics_first_timestamp                 DateTime?                      @db.DateTime(0)
  analytics_first_visit_timestamp           DateTime?                      @db.DateTime(0)
  analytics_first_url                       String?                        @db.VarChar(500)
  first_conversion_date                     DateTime?                      @db.DateTime(0)
  first_conversion_event_name               String?                        @db.VarChar(500)
  analytics_first_touch_converting_campaign String?                        @db.VarChar(500)
  first_deal_created_date                   DateTime?                      @db.DateTime(0)
  contact_created_at                        DateTime                       @default(now()) @db.DateTime(0)
  contact_updated_at                        DateTime                       @default(now()) @db.DateTime(0)
  hubspot_owner                             hubspot_owner?                 @relation(fields: [hubspot_owner_id], references: [hubspot_owner_id], onDelete: NoAction, map: "FK_11")
  hubspot_contact_cycle_change              hubspot_contact_cycle_change[]
  hubspot_form_submission                   hubspot_form_submission[]

  @@index([hubspot_owner_id], map: "FK_2")
}

model hubspot_contact_cycle_change {
  contact_cycle_change_id              Int                         @id @default(autoincrement())
  contact_id                           Int?
  hubspot_owner_id                     Int?
  cycle_stage_id                       Int
  contact_cycle_change_created_at      DateTime                    @default(now()) @db.DateTime(0)
  contact_cycle_change_fase_updated_at DateTime                    @default(now()) @db.DateTime(0)
  hubspot_contact                      hubspot_contact?            @relation(fields: [contact_id], references: [contact_id], map: "FK_1")
  hubspot_contact_cycle_stage          hubspot_contact_cycle_stage @relation(fields: [cycle_stage_id], references: [cycle_stage_id], onDelete: NoAction, map: "FK_2")
  hubspot_owner                        hubspot_owner?              @relation(fields: [hubspot_owner_id], references: [hubspot_owner_id], map: "hubspot_contact_cycle_change_ibfk_1")

  @@index([hubspot_owner_id], map: "FK_11")
  @@index([contact_id], map: "FK_2")
  @@index([cycle_stage_id], map: "FK_3")
}

model hubspot_contact_cycle_stage {
  cycle_stage_id               Int                            @id @default(autoincrement())
  life_cycle_stage             String                         @db.VarChar(500)
  cycle_stage_created_at       DateTime                       @default(now()) @db.DateTime(0)
  cycle_stage_updated_at       DateTime                       @default(now()) @db.DateTime(0)
  hubspot_contact_cycle_change hubspot_contact_cycle_change[]
}

model hubspot_deal {
  deal_id                   BigInt                      @id
  contact_id                Int
  hubspot_owner_id          Int
  current_deal_stage_id     Int?
  canal_op                  String?                     @db.VarChar(500)
  course                    String?                     @db.VarChar(500)
  recommended_trail         String?                     @db.VarChar(500)
  professional_goal         String?                     @db.VarChar(500)
  job_role                  String?                     @db.VarChar(500)
  working_status            String?                     @db.VarChar(500)
  gender                    String?                     @db.VarChar(500)
  age                       String?                     @db.VarChar(500)
  main_objection            String?                     @db.VarChar(500)
  deal_created_at           DateTime                    @default(now()) @db.DateTime(0)
  deal_updated_at           DateTime                    @default(now()) @db.DateTime(0)
  deal_status               Int?                        @db.TinyInt
  hubspot_owner             hubspot_owner               @relation(fields: [hubspot_owner_id], references: [hubspot_owner_id], onDelete: NoAction, map: "FK_12")
  hubspot_deal_cycle_change hubspot_deal_cycle_change[]
  hubspot_deal_lost         hubspot_deal_lost[]
  hubspot_deal_won          hubspot_deal_won[]
  hubspot_owner_activity    hubspot_owner_activity[]

  @@index([contact_id], map: "FK_1")
  @@index([hubspot_owner_id], map: "FK_3")
}

model hubspot_deal_cycle_change {
  deal_cycle_change_id         Int                 @id @default(autoincrement())
  deal_stage_id                Int
  deal_id                      BigInt
  hubspot_owner_id             Int?
  deal_cycle_change_created_at DateTime            @default(now()) @db.DateTime(0)
  deal_cycle_change_updated_at DateTime            @default(now()) @db.DateTime(0)
  hubspot_deal_stage           hubspot_deal_stage  @relation(fields: [deal_stage_id], references: [deal_stage_id], onDelete: NoAction, map: "FK_5")
  hubspot_deal                 hubspot_deal        @relation(fields: [deal_id], references: [deal_id], onDelete: NoAction, onUpdate: NoAction, map: "hubspot_deal_cycle_change_relation_3")
  hubspot_deal_lost            hubspot_deal_lost[]
  hubspot_deal_won             hubspot_deal_won[]

  @@index([deal_stage_id], map: "FK_1")
  @@index([hubspot_owner_id], map: "FK_11")
  @@index([deal_id], map: "FK_2")
}

model hubspot_deal_lost {
  deal_lost_id              Int                       @id @default(autoincrement())
  deal_id                   BigInt
  deal_cycle_change_id      Int
  lost_reason               String                    @db.VarChar(500)
  lost_stage                String                    @db.VarChar(500)
  deal_lost_created_at      DateTime                  @default(now()) @db.DateTime(0)
  deal_lost_updated_at      DateTime                  @default(now()) @db.DateTime(0)
  hubspot_deal_cycle_change hubspot_deal_cycle_change @relation(fields: [deal_cycle_change_id], references: [deal_cycle_change_id], onDelete: Cascade, map: "FK_deal_cycle_change_to_deal_lost")
  hubspot_deal              hubspot_deal              @relation(fields: [deal_id], references: [deal_id], onDelete: Cascade, map: "FK_deal_to_deal_lost")

  @@index([deal_cycle_change_id], map: "FK_deal_cycle_change_to_deal_lost")
  @@index([deal_id], map: "FK_deal_to_deal_lost")
}

model hubspot_deal_stage {
  deal_stage_id             Int                         @id @default(autoincrement())
  deal_stage_name           String?                     @db.VarChar(500)
  deal_stage_label          String?                     @db.VarChar(100)
  deal_stage_created_at     DateTime                    @default(now()) @db.DateTime(0)
  deal_stage_updated_at     DateTime                    @default(now()) @db.DateTime(0)
  hubspot_deal_cycle_change hubspot_deal_cycle_change[]
}

model hubspot_deal_won {
  deal_won_id               Int                       @id @default(autoincrement())
  deal_id                   BigInt
  deal_cycle_change_id      Int
  recent_deal_amount        Decimal?                  @db.Decimal(15, 2)
  payment_method            String?                   @db.VarChar(500)
  close_date                DateTime?                 @db.DateTime(0)
  deal_won_created_at       DateTime?                 @default(now()) @db.DateTime(0)
  deal_won_updated_at       DateTime                  @default(now()) @db.DateTime(0)
  hubspot_deal              hubspot_deal              @relation(fields: [deal_id], references: [deal_id], onDelete: Cascade, map: "FK_7")
  hubspot_deal_cycle_change hubspot_deal_cycle_change @relation(fields: [deal_cycle_change_id], references: [deal_cycle_change_id], onDelete: Cascade, map: "FK_8")

  @@index([deal_id], map: "FK_1")
  @@index([deal_cycle_change_id], map: "FK_2")
}

model hubspot_email_marketing {
  email_marketing_id       Int      @id @default(autoincrement())
  hubspot_email_id         BigInt
  email_title              String?  @db.VarChar(500)
  email_subject            String?  @db.VarChar(500)
  author_email             String?  @db.VarChar(500)
  author_name              String?  @db.VarChar(500)
  sender_email             String?  @db.VarChar(500)
  sender_name              String?  @db.VarChar(500)
  archived                 Boolean?
  sent_up_to_date          Int?
  delivered_up_to_date     Int?
  opened_up_to_date        Int?
  clicks_up_to_date        Int?
  replies_up_to_date       Int?
  unsubscribed_up_to_date  Int?
  hard_bounced_up_to_date  Int?
  soft_bounced_up_to_date  Int?
  hubspot_email_created_at DateTime @default(now()) @db.DateTime(0)
  hubspot_email_updated_at DateTime @default(now()) @db.DateTime(0)
}

model hubspot_form_submission {
  form_submission_id         Int              @id @default(autoincrement())
  contact_id                 Int?
  source                     String?          @db.VarChar(500)
  event_name                 String?          @db.VarChar(500)
  utm_campaign               String?          @db.VarChar(500)
  utm_medium                 String?          @db.VarChar(500)
  utm_source                 String?          @db.VarChar(500)
  utm_content                String?          @db.VarChar(500)
  submitted_at               DateTime         @db.DateTime(0)
  form_submission_created_at DateTime?        @default(now()) @db.DateTime(0)
  form_submission_updated_at DateTime?        @default(now()) @db.DateTime(0)
  hubspot_contact            hubspot_contact? @relation(fields: [contact_id], references: [contact_id], map: "FK_3")

  @@index([contact_id], map: "FK_2")
}

model hubspot_owner {
  hubspot_owner_id             Int                            @id @default(autoincrement())
  team_id                      Int?
  name                         String                         @db.VarChar(500)
  email                        String                         @db.VarChar(500)
  email_rd                     String?                        @db.VarChar(500)
  archived                     Boolean?
  owner_created_at             DateTime?                      @default(now()) @db.DateTime(0)
  owner_updated_at             DateTime                       @default(now()) @db.DateTime(0)
  rd_vendedor_id               Int?
  hubspot_contact              hubspot_contact[]
  hubspot_contact_cycle_change hubspot_contact_cycle_change[]
  hubspot_deal                 hubspot_deal[]
  hubspot_team                 hubspot_team?                  @relation(fields: [team_id], references: [team_id], map: "FK_13")
  hubspot_owner_activity       hubspot_owner_activity[]
  hubspot_owner_team_change    hubspot_owner_team_change[]

  @@index([team_id], map: "FK_2")
}

model hubspot_owner_team_change {
  owner_team_id         Int           @id @default(autoincrement())
  hubspot_owner_id      Int
  team_id               Int
  owner_team_created_at DateTime?     @default(now()) @db.DateTime(0)
  owner_team_updated_at DateTime?     @default(now()) @db.DateTime(0)
  hubspot_owner         hubspot_owner @relation(fields: [hubspot_owner_id], references: [hubspot_owner_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_16")
  hubspot_team          hubspot_team  @relation(fields: [team_id], references: [team_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_17")

  @@index([hubspot_owner_id], map: "FK_2")
  @@index([team_id], map: "FK_3")
}

model hubspot_team {
  team_id                   Int                         @id @default(autoincrement())
  team_name                 String                      @db.VarChar(500)
  team_created_at           DateTime                    @default(now()) @db.DateTime(0)
  team_updated_at           DateTime                    @default(now()) @db.DateTime(0)
  hubspot_owner             hubspot_owner[]
  hubspot_owner_team_change hubspot_owner_team_change[]
}

model indique {
  indique_id         Int         @id @default(autoincrement())
  treinamento_id     Int
  aluno_id           Int
  indique_criacao    DateTime    @default(now()) @db.Timestamp(0)
  indique_updated_at DateTime    @default(now()) @db.DateTime(0)
  aluno              aluno       @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "indique_ibfk_1")
  treinamento        treinamento @relation(fields: [treinamento_id], references: [treinamento_id], onUpdate: Restrict, map: "indique_ibfk_2")

  @@index([aluno_id], map: "aluno_id")
  @@index([treinamento_id], map: "treinamento_id")
}

model lead {
  lead_id                Int       @id @default(autoincrement())
  lead_nome              String?   @default("-") @db.VarChar(300)
  lead_email             String    @db.VarChar(300)
  lead_fone              String?   @default("-") @db.VarChar(300)
  lead_cidade            String?   @default("-") @db.VarChar(300)
  lead_estado            String?   @default("-") @db.VarChar(300)
  lead_engenheiro        String?   @default("-") @db.VarChar(300)
  lead_faculdade         String?   @default("-") @db.VarChar(300)
  lead_data_criacao      String    @db.VarChar(300)
  lead_data_oportunidade String?   @default("-") @db.VarChar(300)
  lead_rd_interesse      String?   @db.VarChar(300)
  lead_rd_fit            String?   @default("-") @db.VarChar(300)
  lead_rd_url            String?   @default("-") @db.VarChar(300)
  vendedor_id            Int?
  lead_data_criacao_date DateTime? @db.DateTime(0)
  lead_log_update        DateTime  @default(now()) @db.DateTime(0)

  @@index([lead_email], map: "lead_email_idx")
}

model lms_acesso {
  acesso_id          Int                 @id @default(autoincrement())
  acesso_status      Int                 @default(1)
  acesso_data_cricao DateTime            @default(now()) @db.DateTime(0)
  acesso_data_update DateTime            @default(now()) @db.DateTime(0)
  aluno_id           Int
  curso_id           Int
  acesso_assinatura  Int                 @default(0)
  acesso_corp        Int?
  dnc_profissionais  dnc_profissionais[]
  aluno              aluno               @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "lms_acesso_ibfk_1")
  lms_curso          lms_curso           @relation(fields: [curso_id], references: [curso_id], onUpdate: Restrict, map: "lms_acesso_ibfk_2")

  @@index([aluno_id], map: "aluno_id")
  @@index([curso_id], map: "curso_id")
}

model lms_aluno_carga_dia {
  lms_aluno_carga_dia_id  Int                      @id @default(autoincrement())
  slot_numero             Int
  aluno_id                Int
  data                    DateTime                 @db.Date
  carga_horaria           Int
  turma_codigo            String                   @db.Text
  aluno_carga_dia_created DateTime                 @default(now()) @db.DateTime(0)
  aluno_carga_dia_updated DateTime                 @default(now()) @db.DateTime(0)
  lms_carga_dia_conteudo  lms_carga_dia_conteudo[]
}

model lms_caderno {
  caderno_id           Int      @id @default(autoincrement())
  caderno_texto        String   @db.Text
  caderno_data_created DateTime @default(now()) @db.DateTime(0)
  caderno_data_update  DateTime @default(now()) @db.DateTime(0)
  step_id              Int
  aluno_id             Int
  aluno                aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "lms_caderno_ibfk_1")
  lms_step             lms_step @relation(fields: [step_id], references: [step_id], onUpdate: Restrict, map: "lms_caderno_ibfk_2")

  @@index([aluno_id], map: "aluno_id")
  @@index([step_id], map: "step_id")
}

model lms_carga_dia_conteudo {
  lms_carga_dia_conteudo_id     Int                 @id @default(autoincrement())
  conteudo_token                String              @db.Text
  conteudo_numero               Int
  conteudo_minuto_plano_estudos Int?
  aluno_carga_dia_id            Int
  carga_data_created            DateTime            @default(now()) @db.DateTime(0)
  carga_data_updated            DateTime            @default(now()) @db.DateTime(0)
  lms_aluno_carga_dia           lms_aluno_carga_dia @relation(fields: [aluno_carga_dia_id], references: [lms_aluno_carga_dia_id], onUpdate: Restrict, map: "fk_aluno_carga_dia")

  @@index([aluno_carga_dia_id], map: "aluno_carga_dia_id")
}

model lms_conteudo {
  conteudo_id            Int                      @id @default(autoincrement())
  conteudo_titulo        String                   @db.Text
  conteudo_descricao     String?                  @db.Text
  conteudo_token         String                   @db.Text
  conteudo_categoria_id  Int
  conteudo_url           String                   @db.Text
  conteudo_material_url  String?                  @db.Text
  conteudo_minuto        Int?                     @default(0)
  conteudo_data_created  DateTime                 @default(now()) @db.DateTime(0)
  conteudo_data_updated  DateTime                 @default(now()) @db.DateTime(0)
  frm_type_id            Int?
  versao_id              Int
  jumpy_conteudo_id      Int?
  lms_versionamento      lms_versionamento        @relation(fields: [versao_id], references: [versao_id], onUpdate: Restrict, map: "lms_conteudo_ibfk_1")
  frm_type               frm_type?                @relation(fields: [frm_type_id], references: [type_id], onDelete: Restrict, onUpdate: Restrict, map: "lms_conteudo_ibfk_2")
  lms_conteudo_avaliacao lms_conteudo_avaliacao[]
  lms_conteudo_conclusao lms_conteudo_conclusao[]
  lms_step_conteudo      lms_step_conteudo[]

  @@index([conteudo_token(length: 300)], map: "conteudo_token_idx")
  @@index([frm_type_id], map: "frm_type_id")
  @@index([versao_id], map: "versao_id")
}

model lms_conteudo_avaliacao {
  conteudo_avaliacao_id    Int          @id @default(autoincrement())
  quantidade_estrelas      Int
  conteudo_id              Int
  aluno_id                 Int
  avaliacao_conteudo_token String?      @db.Text
  avaliacao_data_created   DateTime     @default(now()) @db.DateTime(0)
  avaliacao_data_updated   DateTime     @default(now()) @db.DateTime(0)
  aluno                    aluno        @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "lms_conteudo_avaliacao_ibfk_1")
  lms_conteudo             lms_conteudo @relation(fields: [conteudo_id], references: [conteudo_id], onUpdate: Restrict, map: "lms_conteudo_avaliacao_ibfk_2")

  @@index([aluno_id], map: "aluno_id")
  @@index([avaliacao_conteudo_token(length: 300)], map: "avaliacao_conteudo_token_idx")
  @@index([conteudo_id], map: "conteudo_id")
}

model lms_conteudo_categoria {
  conteudo_categoria_id             Int      @id @default(autoincrement())
  categoria                         String   @db.Text
  lms_conteudo_categoria_created_at DateTime @default(now()) @db.DateTime(0)
  lms_conteudo_categoria_updated_at DateTime @default(now()) @db.DateTime(0)
}

model lms_conteudo_conclusao {
  conteudo_conclusao_id    Int          @id @default(autoincrement())
  conclusao_estado         Int
  conclusao_data_created   DateTime     @default(now()) @db.DateTime(0)
  conclusao_data_update    DateTime     @default(now()) @db.DateTime(0)
  conteudo_id              Int
  aluno_id                 Int
  conclusao_conteudo_token String?      @db.Text
  aluno                    aluno        @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "lms_conteudo_conclusao_ibfk_1")
  lms_conteudo             lms_conteudo @relation(fields: [conteudo_id], references: [conteudo_id], onUpdate: Restrict, map: "lms_conteudo_conclusao_ibfk_2")

  @@index([aluno_id], map: "aluno_id")
  @@index([conclusao_conteudo_token(length: 300)], map: "conclusao_conteudo_token_idx")
  @@index([conteudo_id], map: "conteudo_id")
}

model lms_credencial {
  credencial_id               Int      @id @default(autoincrement())
  credencial_token            String   @db.Text
  credencial_uso              Int      @default(0)
  credencial_tipo             Int
  credencial_data_criacao     DateTime @default(now()) @db.DateTime(0)
  credencial_data_atualizacao DateTime @default(now()) @db.DateTime(0)
  aluno_id                    Int
  conteudo_token              String?  @db.Text
  path_url                    String   @db.Text
  aluno                       aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "lms_credencial_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
  @@index([credencial_data_criacao], map: "credencial_data_criacao_idx")
}

model lms_curso {
  curso_id                 Int                 @id @default(autoincrement())
  treinamento_id           Int?
  curso_categoria          Int
  curso_gratuito           Int                 @default(0) @db.TinyInt
  curso_corp               Int                 @default(0)
  habilidade_tipo          Int?
  curso_tipo               Int
  curso_titulo             String              @db.Text
  curso_descricao          String              @db.Text
  curso_logo               String              @db.Text
  curso_cor_1              String              @db.Text
  curso_cor_2              String              @db.Text
  curso_path               String?             @db.Text
  curso_path_checkout      String?             @db.Text
  curso_slot_quantidade    Int?                @default(1)
  empresa_id               Int?
  curso_jumpy              Int                 @default(0)
  curso_status             Int                 @default(1)
  curso_data_created       DateTime            @default(now()) @db.DateTime(0)
  curso_data_update        DateTime            @default(now()) @db.DateTime(0)
  curso_sigla              String?             @db.VarChar(10)
  lms_escola_id            Int?                @db.UnsignedInt
  curso_carga_horaria      Int?
  curso_conteudo_descricao String?             @db.VarChar(455)
  curso_nivelamento        String?             @db.VarChar(455)
  lms_acesso               lms_acesso[]
  lms_escola               lms_escola?         @relation(fields: [lms_escola_id], references: [lms_escola_id], onUpdate: SetNull, map: "lms_curso_escola_id_fk")
  treinamento              treinamento?        @relation(fields: [treinamento_id], references: [treinamento_id], onDelete: Restrict, onUpdate: Restrict, map: "lms_curso_ibfk_1")
  lms_slot                 lms_slot[]
  lms_versionamento        lms_versionamento[]
  regra                    regra[]
  regra_versao             regra_versao[]
  score_presenca           score_presenca[]
  score_zoom_sala          score_zoom_sala[]

  @@index([lms_escola_id], map: "lms_curso_escola_id_fk")
  @@index([treinamento_id], map: "treinamento_id")
}

model lms_escola {
  lms_escola_id      Int         @id @default(autoincrement()) @db.UnsignedInt
  lms_escola_titulo  String?     @db.Text
  lms_escola_created DateTime?   @default(now()) @db.DateTime(0)
  lms_escola_updated DateTime?   @default(now()) @db.DateTime(0)
  lms_escola_forum   String?     @db.Text
  lms_curso          lms_curso[]
}

model lms_fila_video {
  fila_video_id             Int       @id @default(autoincrement())
  fila_video_path           String    @db.Text
  fila_video_aws_status     Int?      @default(0)
  fila_video_aws_conversao  Int       @default(0)
  fila_video_data_inicio    DateTime  @default(now()) @db.DateTime(0)
  fila_video_data_aws       DateTime? @db.DateTime(0)
  fila_video_data_conversao DateTime? @db.DateTime(0)
  lms_fila_video_updated_at DateTime  @default(now()) @db.DateTime(0)
}

model lms_integracao_rd {
  integracao_id Int      @id @default(autoincrement())
  identificador String   @db.Text
  curso_id      Int
  create_dthr   DateTime @default(now()) @db.DateTime(0)
  update_dthr   DateTime @default(now()) @db.DateTime(0)
}

model lms_log_versoes {
  lms_log_versoes_id         Int       @id @default(autoincrement())
  curso_id                   Int?
  turma_codigo               String?   @db.Text
  versao_id                  Int?
  data                       DateTime? @default(now()) @db.DateTime(0)
  lms_log_versoes_updated_at DateTime  @default(now()) @db.DateTime(0)
}

model lms_modulo {
  modulo_id           Int               @id @default(autoincrement())
  modulo_titulo       String            @db.Text
  modulo_posicao      Int?
  modulo_data_created DateTime          @default(now()) @db.DateTime(0)
  modulo_data_update  DateTime          @default(now()) @db.DateTime(0)
  slot_id             Int
  versao_id           Int
  lms_slot            lms_slot          @relation(fields: [slot_id], references: [slot_id], onUpdate: Restrict, map: "lms_modulo_ibfk_1")
  lms_versionamento   lms_versionamento @relation(fields: [versao_id], references: [versao_id], onUpdate: Restrict, map: "lms_modulo_ibfk_2")
  lms_step            lms_step[]

  @@index([modulo_titulo(length: 300)], map: "modulo_titulo_idx")
  @@index([slot_id], map: "slot_id")
  @@index([versao_id], map: "versao_id")
}

model lms_notificacao {
  notificacao_id             Int                                    @id @default(autoincrement())
  notificacao_identificacao  String                                 @db.VarChar(150)
  notificacao_exibicao       String                                 @db.VarChar(150)
  notificacao_descricao      String                                 @db.Text
  notificacao_tipo_id        Int
  notificacao_categoria      lms_notificacao_notificacao_categoria?
  notificacao_data_liberacao DateTime                               @db.DateTime(0)
  notificacao_link           String                                 @db.Text
  data_criacao               DateTime                               @default(now()) @db.DateTime(0)
  data_atualizacao           DateTime                               @default(now()) @db.Timestamp(0)
  notificacao_updated_at     DateTime                               @default(now()) @db.DateTime(0)
  notificacao_tipo           notificacao_tipo                       @relation(fields: [notificacao_tipo_id], references: [notificacao_tipo_id], onUpdate: Restrict, map: "fk_notificacao_tipo")
  lms_notificacao_envio      lms_notificacao_envio[]

  @@index([notificacao_tipo_id], map: "fk_notificacao_tipo")
}

model lms_notificacao_aluno_status {
  notificacao_aluno_status_id Int      @id @default(autoincrement())
  notificacao_id              Int
  aluno_id                    Int
  visto                       Int      @default(0) @db.TinyInt
  excluido                    Int      @default(0)
  aluno_status_created_at     DateTime @default(now()) @db.DateTime(0)
  aluno_status_updated_at     DateTime @default(now()) @db.DateTime(0)
}

model lms_notificacao_envio {
  lms_notificacao_envio_id         Int             @id @default(autoincrement())
  notificacao_id                   Int
  curso_id                         Int?
  turma_codigo                     String?         @db.VarChar(150)
  aluno_id                         Int?
  lms_notificacao_envio_created_at DateTime        @default(now()) @db.DateTime(0)
  lms_notificacao_envio_updated_at DateTime        @default(now()) @db.DateTime(0)
  lms_notificacao                  lms_notificacao @relation(fields: [notificacao_id], references: [notificacao_id], onUpdate: Restrict, map: "fk_notificacao_envio")

  @@index([notificacao_id], map: "fk_notificacao_envio")
}

model lms_pct_conclusao_cursos_gratuitos {
  pct_conclusao_id Int      @id @default(autoincrement())
  aluno_id         Int
  lead_id          Int?
  curso_id         Int
  curso_titulo     String   @db.Text
  pct_conclusao    Float    @db.Float
  created_dthr     DateTime @default(now()) @db.Timestamp(0)
  updated_dthr     DateTime @default(now()) @db.Timestamp(0)
}

model lms_plano_estudo_turma {
  lms_plano_estudo_turma_id         Int      @id @default(autoincrement())
  slot_numero                       Int
  turma_codigo                      String   @db.Text
  tempo_estudo_minimo_semanal       Int
  lms_plano_estudo_turma_created_at DateTime @default(now()) @db.DateTime(0)
  lms_plano_estudo_turma_updated_at DateTime @default(now()) @db.DateTime(0)
}

model lms_play_log {
  play_log_id             Int      @id @default(autoincrement())
  play_log_data_criado    DateTime @default(now()) @db.DateTime(0)
  aluno_id                Int
  conteudo_token          String   @db.Text
  curso_path              String   @db.Text
  lms_play_log_updated_at DateTime @default(now()) @db.DateTime(0)
  aluno                   aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "lms_play_log_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
}

model lms_primeiros_passos {
  primeiros_passos_id             Int                          @id @default(autoincrement())
  primeiros_passos_titulo         String                       @db.Text
  primeiros_passos_url            String                       @db.Text
  curso_id                        Int
  lms_primeiros_passos_created_at DateTime                     @default(now()) @db.DateTime(0)
  lms_primeiros_passos_updated_at DateTime                     @default(now()) @db.DateTime(0)
  lms_primeiros_passos_aluno      lms_primeiros_passos_aluno[]
}

model lms_primeiros_passos_aluno {
  primeiros_passos_aluno_id   Int                  @id @default(autoincrement())
  primeiros_passos_id         Int
  aluno_id                    Int
  primeiros_passos_status     Int
  data_criacao                DateTime             @default(now()) @db.Timestamp(0)
  primeiros_passos_updated_at DateTime             @default(now()) @db.DateTime(0)
  aluno                       aluno                @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "lms_primeiros_passos_aluno_ibfk_1")
  lms_primeiros_passos        lms_primeiros_passos @relation(fields: [primeiros_passos_id], references: [primeiros_passos_id], onUpdate: Restrict, map: "lms_primeiros_passos_aluno_ibfk_2")

  @@index([aluno_id], map: "aluno_id")
  @@index([primeiros_passos_id], map: "primeiros_passos_id")
}

model lms_slot {
  slot_id             Int                @id @default(autoincrement())
  slot_numero         Int
  curso_id            Int
  versao_id           Int
  lms_slot_created_at DateTime           @default(now()) @db.DateTime(0)
  lms_slot_updated_at DateTime           @default(now()) @db.DateTime(0)
  lms_modulo          lms_modulo[]
  lms_curso           lms_curso          @relation(fields: [curso_id], references: [curso_id], onUpdate: Restrict, map: "lms_slot_ibfk_1")
  lms_versionamento   lms_versionamento  @relation(fields: [versao_id], references: [versao_id], onUpdate: Restrict, map: "lms_slot_ibfk_2")
  npa_deliverables    npa_deliverables[]

  @@index([curso_id], map: "curso_id")
  @@index([versao_id], map: "versao_id")
}

model lms_slot_liberacao {
  liberacao_id                  Int      @id @default(autoincrement())
  curso_id                      Int
  turma_codigo                  String?  @db.Text
  slot_numero                   Int
  liberacao_data                DateTime @db.Date
  lms_slot_liberacao_created_at DateTime @default(now()) @db.DateTime(0)
  lms_slot_liberacao_updated_at DateTime @default(now()) @db.DateTime(0)
}

model lms_step {
  step_id             Int                 @id @default(autoincrement())
  step_titulo         String              @db.Text
  step_posicao        Int
  step_imagem_url     String?             @db.Text
  modulo_id           Int
  versao_id           Int
  lms_step_created_at DateTime            @default(now()) @db.DateTime(0)
  lms_step_updated_at DateTime            @default(now()) @db.DateTime(0)
  lms_caderno         lms_caderno[]
  lms_modulo          lms_modulo          @relation(fields: [modulo_id], references: [modulo_id], onUpdate: Restrict, map: "lms_step_ibfk_1")
  lms_versionamento   lms_versionamento   @relation(fields: [versao_id], references: [versao_id], onUpdate: Restrict, map: "lms_step_ibfk_2")
  lms_step_conteudo   lms_step_conteudo[]

  @@index([modulo_id], map: "modulo_id")
  @@index([step_titulo(length: 300)], map: "step_titulo_idx")
  @@index([versao_id], map: "versao_id")
}

model lms_step_conteudo {
  step_conteudo_id             Int               @id @default(autoincrement())
  step_id                      Int
  conteudo_id                  Int
  versao_id                    Int
  lms_step_conteudo_created_at DateTime          @default(now()) @db.DateTime(0)
  lms_step_conteudo_updated_at DateTime          @default(now()) @db.DateTime(0)
  lms_step                     lms_step          @relation(fields: [step_id], references: [step_id], onUpdate: Restrict, map: "fk_step_conteudo")
  lms_versionamento            lms_versionamento @relation(fields: [versao_id], references: [versao_id], onUpdate: Restrict, map: "lms_step_conteudo_ibfk_2")
  lms_conteudo                 lms_conteudo      @relation(fields: [conteudo_id], references: [conteudo_id], onUpdate: Restrict, map: "lms_step_conteudo_ibfk_3")

  @@index([conteudo_id], map: "conteudo_id")
  @@index([step_id], map: "step_id")
  @@index([versao_id], map: "versao_id")
}

model lms_treinamento_habilitado {
  lms_treinamento_habilitado_id Int         @id @default(autoincrement())
  treinamento_id                Int
  habilitado                    Int
  habilitado_created_at         DateTime    @default(now()) @db.DateTime(0)
  habilitado_updated_at         DateTime    @default(now()) @db.DateTime(0)
  treinamento                   treinamento @relation(fields: [treinamento_id], references: [treinamento_id], onUpdate: Restrict, map: "lms_treinamento_habilitado_ibfk_1")

  @@index([treinamento_id], map: "treinamento_id")
}

model lms_versionamento {
  versao_id          Int                 @id @default(autoincrement())
  curso_id           Int
  versao_status      Int                 @default(1)
  versao_data_criada DateTime            @default(now()) @db.DateTime(0)
  versao_data_update DateTime            @default(now()) @db.DateTime(0)
  lms_conteudo       lms_conteudo[]
  lms_modulo         lms_modulo[]
  lms_slot           lms_slot[]
  lms_step           lms_step[]
  lms_step_conteudo  lms_step_conteudo[]
  lms_curso          lms_curso           @relation(fields: [curso_id], references: [curso_id], onUpdate: Restrict, map: "lms_versionamento_ibfk_1")
  softcheck_turma    softcheck_turma[]

  @@index([curso_id], map: "curso_id")
}

model lms_watch_log {
  watch_log_id             Int      @id @default(autoincrement())
  watch_log_data_criado    DateTime @default(now()) @db.DateTime(0)
  watch_log_time           Int
  aluno_id                 Int
  conteudo_token           String   @db.Text
  curso_path               String   @db.Text
  lms_watch_log_updated_at DateTime @default(now()) @db.DateTime(0)
  aluno                    aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "lms_watch_log_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
}

model lobby_conferencia {
  lobby_id           Int                            @id @default(autoincrement())
  lobby_nome         String                         @db.VarChar(150)
  lobby_link         String                         @db.VarChar(20)
  lobby_status       lobby_conferencia_lobby_status
  score_zoom_sala_id Int
  data_lobby_created DateTime                       @default(now()) @db.DateTime(0)
  data_lobby_updated DateTime                       @default(now()) @db.DateTime(0)
  score_zoom_sala    score_zoom_sala                @relation(fields: [score_zoom_sala_id], references: [sala_id], onUpdate: Restrict, map: "fk_score_zoom_sala_id")
  lobby_sala         lobby_sala[]

  @@index([score_zoom_sala_id], map: "fk_score_zoom_sala_id")
  @@index([lobby_link], map: "sala_link")
}

model lobby_sala {
  sala_id               Int                    @default(autoincrement())
  lobby_id              Int
  sala_nome             String                 @db.VarChar(20)
  sala_status           lobby_sala_sala_status @default(NL)
  lobby_sala_created_at DateTime               @default(now()) @db.DateTime(0)
  lobby_sala_updated_at DateTime               @default(now()) @db.DateTime(0)
  lobby_conferencia     lobby_conferencia      @relation(fields: [lobby_id], references: [lobby_id], onUpdate: Restrict, map: "lobby_sala_ibfk_1")

  @@id([sala_id, lobby_id])
  @@index([lobby_id], map: "lobby_id")
}

model log_acessos_class_removidos {
  id_log                        Int       @id @default(autoincrement())
  json_dados_assinatura_pagarme Json?
  aluno_id                      Int?
  carrinho_id                   Int?
  dthr_remocao                  DateTime? @db.DateTime(0)
  log_created                   DateTime  @default(now()) @db.DateTime(0)
  log_updated                   DateTime  @default(now()) @db.DateTime(0)
  class_removidos_created_at    DateTime  @default(now()) @db.DateTime(0)
  class_removidos_updated_at    DateTime  @default(now()) @db.DateTime(0)
}

model log_cron {
  log_cron_id         Int      @id @default(autoincrement())
  log_funcao          String   @db.VarChar(150)
  log_dados           String?  @db.Text
  log_json            Json?
  log_dthr            DateTime @default(now()) @db.Timestamp(0)
  log_cron_updated_at DateTime @default(now()) @db.DateTime(0)
}

model log_entrada_rd_oportunidade_DELETAR {
  log_entrada_rd             Int      @id @default(autoincrement())
  log_posicao_api            String   @db.VarChar(150)
  log_dados                  Json
  log_dthr                   DateTime @default(now()) @db.DateTime(0)
  rd_oportunidade_updated_at DateTime @default(now()) @db.DateTime(0)
}

model material {
  material_id         Int      @id @default(autoincrement())
  material_titulo     String   @db.VarChar(300)
  material_url        String   @db.VarChar(300)
  material_categoria  String   @db.VarChar(300)
  material_data       DateTime @default(now()) @db.Timestamp(0)
  material_imagem     String   @db.Text
  material_updated_at DateTime @default(now()) @db.DateTime(0)
}

model mentoria_data {
  data_id                  Int      @id @default(autoincrement())
  data_dia_semana          Int
  data_hora                Int
  data_minuto              Int
  data_encontro_id         Int
  mentoria_data_created_at DateTime @default(now()) @db.DateTime(0)
  mentoria_data_updated_at DateTime @default(now()) @db.DateTime(0)
}

model mentoria_encontro {
  encontro_id                  Int           @id @default(autoincrement())
  encontro_nome                String        @db.VarChar(255)
  encontro_link                String        @db.VarChar(255)
  encontro_calendar            String?       @db.VarChar(255)
  encontro_tipo_id             Int
  encontro_habilitado          Int
  encontro_aberto              Int
  mentoria_encontro_created_at DateTime      @default(now()) @db.DateTime(0)
  mentoria_encontro_updated_at DateTime      @default(now()) @db.DateTime(0)
  mentoria_tipo                mentoria_tipo @relation(fields: [encontro_tipo_id], references: [tipo_id], onUpdate: Restrict, map: "mentoria_encontro_ibfk_1")

  @@index([encontro_tipo_id], map: "encontro_tipo_id")
}

model mentoria_mentores {
  mentores_id                  Int      @id @default(autoincrement())
  softcheck_profissional_id    Int
  encontro_id                  Int
  mentoria_mentores_created_at DateTime @default(now()) @db.DateTime(0)
  mentoria_mentores_updated_at DateTime @default(now()) @db.DateTime(0)
}

model mentoria_tipo {
  tipo_id                  Int                 @id @default(autoincrement())
  mentoria_nome            String              @db.VarChar(255)
  mentoria_tipo_created_at DateTime            @default(now()) @db.DateTime(0)
  mentoria_tipo_updated_at DateTime            @default(now()) @db.DateTime(0)
  mentoria_encontro        mentoria_encontro[]
}

model mkt_face_ads {
  mkt_face_ads_id         Int       @id @default(autoincrement())
  ad_id                   String?   @db.VarChar(300)
  ad_name                 String?   @db.VarChar(300)
  account_id              String?   @db.VarChar(300)
  account_name            String?   @db.VarChar(300)
  campaign_name           String?   @db.VarChar(300)
  ad_link                 String?   @db.VarChar(1000)
  ad_link_path            String?   @db.VarChar(300)
  ad_utm_campaign         String?   @db.VarChar(300)
  ad_utm_medium           String?   @db.VarChar(300)
  ad_utm_source           String?   @db.VarChar(300)
  ad_utm_content          String?   @db.VarChar(300)
  objective               String?   @db.VarChar(100)
  spend                   Decimal?  @db.Decimal(15, 2)
  impressions             Int?
  reach                   Int?
  frequency               Float?    @db.Float
  clicks                  Int
  anuncio_data            DateTime? @db.Date
  face_ads_dthr_banco     DateTime? @default(now()) @db.DateTime(0)
  face_ads_dthr_update    DateTime? @default(now()) @db.DateTime(0)
  mkt_face_ads_updated_at DateTime  @default(now()) @db.DateTime(0)

  @@index([ad_utm_campaign], map: "ad_utm_campaign_idx")
  @@index([ad_utm_source], map: "ad_utm_source_idx")
  @@index([anuncio_data], map: "anuncio_data_idx")
}

model mkt_google_ads {
  mkt_google_ads_id     Int       @id @default(autoincrement())
  campaign_id           Int?
  campaign_name         String?   @db.VarChar(200)
  campaign_status       Int?
  campaign_start_date   DateTime? @db.Date
  campaign_end_date     DateTime? @db.Date
  group_id              Int?
  group_name            String?   @db.VarChar(200)
  group_status          Int?
  ad_id                 Int?
  ad_name               String?   @db.VarChar(200)
  ad_utm_source         String?   @db.VarChar(200)
  ad_utm_medium         String?   @db.VarChar(200)
  ad_utm_campaign       String?   @db.VarChar(200)
  ad_utm_content        String?   @db.VarChar(200)
  impressions           Int?
  clicks                Int?
  cost                  Float?    @db.Float
  conversions           Float?    @db.Float
  date                  DateTime? @db.Date
  account_name          String?   @db.VarChar(200)
  account_id            Int?
  google_ads_created_at DateTime  @default(now()) @db.DateTime(0)
  google_ads_updated_at DateTime  @default(now()) @db.DateTime(0)
}

model monday_cs_acompanhamento {
  acompanhamento_id            BigInt                 @id
  aluno_id                     Int?
  aluno_telefone               String?                @db.VarChar(200)
  aluno_linkedin               String?                @db.VarChar(500)
  tags                         String?                @db.VarChar(200)
  responsavel                  String?                @db.VarChar(200)
  turma_id                     String?                @db.VarChar(200)
  novas_fases                  String?                @db.VarChar(500)
  objetivo                     String?                @db.VarChar(200)
  desativado_motivo            String?                @db.VarChar(200)
  contatado                    String?                @db.VarChar(200)
  submeteu_linkedin            String?                @db.VarChar(200)
  linkedin_revisado            String?                @db.VarChar(200)
  github_revisado              String?                @db.VarChar(200)
  aprovado_etapa               String?                @db.VarChar(200)
  banco_talentos               String?                @db.VarChar(200)
  simulacao_entrevista         String?                @db.VarChar(200)
  fup_quarter                  String?                @db.VarChar(200)
  obj_nivel_cargo              String?                @db.VarChar(200)
  output_carreira              String?                @db.VarChar(200)
  obj_cargo                    String?                @db.VarChar(200)
  obj_empresa                  String?                @db.VarChar(200)
  inicio_data                  DateTime?              @db.DateTime(0)
  submissao_data               DateTime?              @db.DateTime(0)
  aprovacao_data               DateTime?              @db.DateTime(0)
  fup_data                     DateTime?              @db.DateTime(0)
  obj_data                     DateTime?              @db.DateTime(0)
  desativado_data              DateTime?              @db.DateTime(0)
  sla_1                        Int?
  sla_2                        Int?
  sla_cs                       Int?
  cs_acompanhamento_created_at DateTime?              @default(now()) @db.DateTime(0)
  cs_acompanhamento_updated_at DateTime?              @default(now()) @db.DateTime(0)
  acompanhamento_monday_state  String                 @db.VarChar(200)
  aluno                        aluno?                 @relation(fields: [aluno_id], references: [aluno_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2_ALUNO")
  monday_cs_atividades         monday_cs_atividades[]

  @@index([aluno_id], map: "FK_2")
}

model monday_cs_atividades {
  atividade_id             BigInt                   @id
  acompanhamento_id        BigInt
  atividade                String?                  @db.VarChar(200)
  responsavel              String?                  @db.VarChar(200)
  canal                    String?                  @db.VarChar(200)
  tipo                     String?                  @db.VarChar(200)
  data_atividade           DateTime?                @db.DateTime(0)
  atividade_created_at     DateTime?                @default(now()) @db.DateTime(0)
  atividade_updated_at     DateTime?                @default(now()) @db.DateTime(0)
  atividade_monday_state   String                   @db.VarChar(200)
  monday_cs_acompanhamento monday_cs_acompanhamento @relation(fields: [acompanhamento_id], references: [acompanhamento_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1_ACOMPANHAMENTO")

  @@index([acompanhamento_id], map: "FK_2")
}

model monday_cs_indicacao {
  indicacao_id         Int                @id @default(autoincrement())
  linkedin_id          BigInt
  indicacao_nome       String             @db.VarChar(500)
  indicacao_contato    String             @db.VarChar(500)
  indicacao_created_at DateTime?          @default(now()) @db.DateTime(0)
  indicacao_updated_at DateTime?          @default(now()) @db.DateTime(0)
  monday_cs_linkedin   monday_cs_linkedin @relation(fields: [linkedin_id], references: [linkedin_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3_LINKEDIN")

  @@index([linkedin_id], map: "FK_2")
}

model monday_cs_linkedin {
  linkedin_id            BigInt                @id
  aluno_id               Int
  responsavel            String?               @db.VarChar(200)
  status                 String?               @db.VarChar(200)
  alocacao               String?               @db.VarChar(200)
  formacao               String?               @db.VarChar(200)
  cargo_pretendido       String?               @db.VarChar(200)
  linkedin_url           String?               @db.VarChar(500)
  cs_linkedin_created_at DateTime?             @default(now()) @db.DateTime(0)
  cs_linkedin_updated_at DateTime?             @default(now()) @db.DateTime(0)
  linkedin_monday_state  String                @db.VarChar(45)
  monday_cs_indicacao    monday_cs_indicacao[]
  aluno                  aluno                 @relation(fields: [aluno_id], references: [aluno_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4_ALUNO")

  @@index([aluno_id], map: "FK_2")
}

model monday_dados_subtasks {
  task_id                BigInt?
  subtask_id             BigInt              @id @default(autoincrement())
  subtask_nome           String?             @db.VarChar(3000)
  subtask_estimado       Int?
  subtask_status         String?             @db.VarChar(100)
  subtask_controle_tempo DateTime?           @db.Time(0)
  subtask_progresso      Int?
  subtask_pontos_feitos  Decimal?            @db.Decimal(15, 2)
  subtask_estado         String?             @db.VarChar(100)
  data_criacao           DateTime            @default(now()) @db.DateTime(0)
  data_atualizacao       DateTime            @default(now()) @db.DateTime(0)
  monday_dados_tasks     monday_dados_tasks? @relation(fields: [task_id], references: [task_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_task_id")

  @@index([task_id], map: "fk_task_id")
}

model monday_dados_tasks {
  task_id                 BigInt                  @id @default(autoincrement())
  task_nome               String?                 @db.VarChar(3000)
  task_responsavel        String?                 @db.VarChar(100)
  task_status             String?                 @db.VarChar(100)
  task_prioridade         String?                 @db.VarChar(100)
  task_feature            String?                 @db.VarChar(3000)
  task_data_criacao       DateTime?               @db.Date
  task_data_conclusao     DateTime?               @db.Date
  task_sprint             String?                 @db.VarChar(100)
  task_data_inicio_sprint DateTime?               @db.Date
  task_data_fim_sprint    DateTime?               @db.Date
  task_projeto            String?                 @db.VarChar(3000)
  task_release            String?                 @db.VarChar(100)
  task_estado             String?                 @db.VarChar(100)
  data_criacao            DateTime                @default(now()) @db.DateTime(0)
  data_atualizacao        DateTime                @default(now()) @db.DateTime(0)
  monday_dados_subtasks   monday_dados_subtasks[]
}

model monday_pd_backlog_dados {
  bkl_dados_id         BigInt    @id
  task                 String?   @db.VarChar(500)
  responsavel          String?   @db.VarChar(200)
  status               String?   @db.VarChar(200)
  controle_tempo       DateTime? @db.Time(0)
  pontos_estimados     Int?
  pontos_realizados    Decimal?  @db.Decimal(15, 2)
  projetos             String?   @db.VarChar(200)
  etapas               String?   @db.VarChar(200)
  sprints              String?   @db.VarChar(200)
  turmas               String?   @db.VarChar(200)
  elementos            String?   @db.VarChar(200)
  gestao               String?   @db.VarChar(200)
  arquivos             String?   @db.VarChar(500)
  deadline             DateTime? @db.Date
  data_liberacao       DateTime? @db.Date
  data_conclusao       DateTime? @db.Date
  desvio_prazo         Decimal?  @db.Decimal(15, 2)
  bkl_dados_created_at DateTime  @default(now()) @db.DateTime(0)
  bkl_dados_updated_at DateTime  @default(now()) @db.DateTime(0)
  bkl_dados_state      String    @db.VarChar(200)
}

model monday_pd_backlog_marketing {
  bkl_marketing_id         BigInt    @id
  task                     String?   @db.VarChar(500)
  responsavel              String?   @db.VarChar(200)
  status                   String?   @db.VarChar(200)
  projetos                 String?   @db.VarChar(200)
  etapas                   String?   @db.VarChar(200)
  sprints                  String?   @db.VarChar(200)
  turmas                   String?   @db.VarChar(200)
  elementos                String?   @db.VarChar(200)
  gestao                   String?   @db.VarChar(200)
  arquivos                 String?   @db.VarChar(500)
  deadline                 DateTime? @db.Date
  data_liberacao           DateTime? @db.Date
  data_conclusao           DateTime? @db.Date
  desvio_prazo             Decimal?  @db.Decimal(15, 2)
  bkl_marketing_created_at DateTime  @default(now()) @db.DateTime(0)
  bkl_marketing_updated_at DateTime  @default(now()) @db.DateTime(0)
  bkl_marketing_state      String    @db.VarChar(200)
}

model monday_pd_backlog_produto {
  bkl_produto_id         BigInt    @id
  task                   String?   @db.VarChar(500)
  responsavel            String?   @db.VarChar(200)
  status                 String?   @db.VarChar(200)
  controle_tempo         DateTime? @db.Time(0)
  pontos_estimados       Int?
  pontos_realizados      Decimal?  @db.Decimal(15, 2)
  projetos               String?   @db.VarChar(200)
  etapas                 String?   @db.VarChar(200)
  sprints                String?   @db.VarChar(200)
  turmas                 String?   @db.VarChar(200)
  elementos              String?   @db.VarChar(200)
  gestao                 String?   @db.VarChar(200)
  arquivos               String?   @db.VarChar(500)
  deadline               DateTime? @db.Date
  data_liberacao         DateTime? @db.Date
  data_conclusao         DateTime? @db.Date
  desvio_prazo           Decimal?  @db.Decimal(15, 2)
  bkl_produto_created_at DateTime  @default(now()) @db.DateTime(0)
  bkl_produto_updated_at DateTime  @default(now()) @db.DateTime(0)
  bkl_produto_state      String    @db.VarChar(200)
}

model monday_pd_backlog_projetos {
  bkl_projetos_id         BigInt    @id
  task                    String?   @db.VarChar(500)
  responsavel             String?   @db.VarChar(200)
  status                  String?   @db.VarChar(200)
  controle_tempo          DateTime? @db.Time(0)
  pontos_estimados        Int?
  pontos_realizados       Decimal?  @db.Decimal(15, 2)
  projetos                String?   @db.VarChar(200)
  etapas                  String?   @db.VarChar(200)
  sprints                 String?   @db.VarChar(200)
  turmas                  String?   @db.VarChar(200)
  elementos               String?   @db.VarChar(200)
  gestao                  String?   @db.VarChar(200)
  arquivos                String?   @db.VarChar(500)
  deadline                DateTime? @db.Date
  data_liberacao          DateTime? @db.Date
  data_conclusao          DateTime? @db.Date
  desvio_prazo            Decimal?  @db.Decimal(15, 2)
  bkl_projetos_created_at DateTime  @default(now()) @db.DateTime(0)
  bkl_projetos_updated_at DateTime  @default(now()) @db.DateTime(0)
  bkl_projetos_state      String    @db.VarChar(200)
}

model monday_pd_backlog_tecnologia {
  bkl_tecnologia_id         BigInt    @id
  task                      String?   @db.VarChar(500)
  responsavel               String?   @db.VarChar(200)
  status                    String?   @db.VarChar(200)
  controle_tempo            DateTime? @db.Time(0)
  pontos_estimados          Int?
  pontos_realizados         Decimal?  @db.Decimal(15, 2)
  projetos                  String?   @db.VarChar(200)
  etapas                    String?   @db.VarChar(200)
  sprints                   String?   @db.VarChar(200)
  turmas                    String?   @db.VarChar(200)
  elementos                 String?   @db.VarChar(200)
  gestao                    String?   @db.VarChar(200)
  arquivos                  String?   @db.VarChar(500)
  deadline                  DateTime? @db.Date
  data_liberacao            DateTime? @db.Date
  data_conclusao            DateTime? @db.Date
  desvio_prazo              Decimal?  @db.Decimal(15, 2)
  bkl_tecnologia_created_at DateTime  @default(now()) @db.DateTime(0)
  bkl_tecnologia_updated_at DateTime  @default(now()) @db.DateTime(0)
  bkl_tecnologia_state      String    @db.VarChar(200)
}

model monday_pd_estruturacao {
  estruturacao_id                    BigInt                               @id
  elemento                           String?                              @db.VarChar(200)
  responsavel                        String?                              @db.VarChar(200)
  quarter                            String?                              @db.VarChar(200)
  sprints                            String?                              @db.VarChar(200)
  tag                                String?                              @db.VarChar(200)
  status                             String?                              @db.VarChar(200)
  pd_estruturacao_created_at         DateTime                             @default(now()) @db.DateTime(0)
  pd_estruturacao_updated_at         DateTime                             @default(now()) @db.DateTime(0)
  pd_estruturacao_state              String                               @db.VarChar(200)
  monday_pd_estruturacao_subelemento monday_pd_estruturacao_subelemento[]
}

model monday_pd_estruturacao_subelemento {
  subelemento_id            BigInt                 @id
  estruturacao_id           BigInt
  subelemento               String?                @db.VarChar(200)
  responsavel               String?                @db.VarChar(200)
  status                    String?                @db.VarChar(200)
  sprints                   String?                @db.VarChar(200)
  entrega                   String?                @db.VarChar(500)
  pd_subelemento_created_at DateTime?              @default(now()) @db.DateTime(0)
  pd_subelemento_updated_at DateTime?              @default(now()) @db.DateTime(0)
  pd_subelemento_state      String                 @db.VarChar(200)
  monday_pd_estruturacao    monday_pd_estruturacao @relation(fields: [estruturacao_id], references: [estruturacao_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7_estruturacao")

  @@index([estruturacao_id], map: "FK_1")
}

model monday_pd_orcamento {
  orcamento_id         BigInt    @id
  descricao            String?   @db.VarChar(200)
  desenvolvimento      String?   @db.VarChar(200)
  escola               String?   @db.VarChar(200)
  projetos             String?   @db.VarChar(200)
  status               String?   @db.VarChar(200)
  framework            String?   @db.VarChar(200)
  modulo               String?   @db.VarChar(200)
  planejado_custo      Decimal?  @db.Decimal(15, 2)
  realizado_custo      Decimal?  @db.Decimal(15, 2)
  desvio_custo         Decimal?  @db.Decimal(15, 2)
  planejado_pagamento  DateTime? @db.Date
  realizado_pagamento  DateTime? @db.Date
  data_entrega         DateTime? @db.Date
  orcamento_created_at DateTime  @default(now()) @db.DateTime(0)
  orcamento_updated_at DateTime  @default(now()) @db.DateTime(0)
  orcamento_state      String    @db.VarChar(200)
}

model mudanca {
  mud_id             Int      @id @default(autoincrement())
  mud_acao           String   @db.Text
  mud_tabela         String   @db.Text
  mud_campo          String   @db.Text
  mud_valor          String   @db.Text
  mud_antigo         String   @db.Text
  mud_item_id        Int
  adm_id             Int
  mud_data           String   @db.Text
  mudanca_created_at DateTime @default(now()) @db.DateTime(0)
  mudanca_updated_at DateTime @default(now()) @db.DateTime(0)
}

model notificacao_tipo {
  notificacao_tipo_id         Int               @id @default(autoincrement())
  notificacao_tipo            String            @db.VarChar(150)
  notificacao_tipo_created_at DateTime          @default(now()) @db.DateTime(0)
  notificacao_tipo_updated_at DateTime          @default(now()) @db.DateTime(0)
  lms_notificacao             lms_notificacao[]
}

model npa_deliverable {
  id                          Int      @id @default(autoincrement()) @db.UnsignedInt
  npa_deliverables_created_at DateTime @default(now()) @db.DateTime(0)
  entrega_id                  Int?
  entrega_numero              Int?
  entrega_topico              String?  @db.VarChar(255)
  entrega_descricao           String?  @db.VarChar(255)
  type_link                   String?  @db.VarChar(255)
  slot_id                     Int?
  treinamento_id              Int?
  npa_deliverables_updated_at DateTime @default(now()) @db.DateTime(0)
}

model npa_deliverables {
  id                          Int          @id @default(autoincrement()) @db.UnsignedInt
  npa_deliverables_created_at DateTime     @default(now()) @db.DateTime(0)
  entrega_id                  Int?
  entrega_numero              Int?
  entrega_topico              String?      @db.VarChar(255)
  entrega_descricao           String?      @db.VarChar(255)
  type_link                   String?      @db.VarChar(255)
  slot_id                     Int?
  treinamento_id              Int?
  npa_deliverables_updated_at DateTime     @default(now()) @db.DateTime(0)
  lms_slot                    lms_slot?    @relation(fields: [slot_id], references: [slot_id], onDelete: NoAction, onUpdate: NoAction, map: "npa_deliverables_slot_id_fk")
  treinamento                 treinamento? @relation(fields: [treinamento_id], references: [treinamento_id], onDelete: NoAction, onUpdate: NoAction, map: "npa_deliverables_treinamento_id_fk")

  @@index([slot_id], map: "npa_deliverables_slot_id_fk")
  @@index([treinamento_id], map: "npa_deliverables_treinamento_id_fk")
}

model npa_entregas {
  tarefa_id               Int      @id @default(autoincrement())
  tarefa_numero           Int
  curso_nome              String   @db.VarChar(255)
  curso_desc              String?  @db.VarChar(255)
  link_type               String?  @db.VarChar(255)
  slot_id                 Int
  treinamento_id          Int
  npa_entregas_created_at DateTime @default(now()) @db.DateTime(0)
  npa_entregas_updated_at DateTime @default(now()) @db.DateTime(0)
}

model npa_facilitador {
  facilitador_id             Int                     @id @default(autoincrement())
  profissional_id            Int
  turma_id                   Int
  grupo_id                   Int
  tipo_id                    Int
  funcao_id                  Int?
  npa_facilitador_created_at DateTime                @default(now()) @db.DateTime(0)
  npa_facilitador_updated_at DateTime                @default(now()) @db.DateTime(0)
  softcheck_profissional     softcheck_profissional  @relation(fields: [profissional_id], references: [softcheck_profissional_id], onUpdate: Restrict, map: "npa_facilitador_ibfk_1")
  softcheck_turma            softcheck_turma         @relation(fields: [turma_id], references: [softcheck_turma_id], onUpdate: Restrict, map: "npa_facilitador_ibfk_2")
  npa_facilitador_funcao     npa_facilitador_funcao? @relation(fields: [funcao_id], references: [funcao_id], onDelete: Restrict, onUpdate: Restrict, map: "npa_facilitador_ibfk_4")

  @@index([funcao_id], map: "funcao_id")
  @@index([grupo_id], map: "npa_facilitador_ibfk_3")
  @@index([profissional_id], map: "profissional_id")
  @@index([turma_id], map: "turma_id")
}

model npa_facilitador_funcao {
  funcao_id                         Int               @id @default(autoincrement())
  funcao_nome                       String            @db.VarChar(255)
  npa_facilitador_funcao_created_at DateTime          @default(now()) @db.DateTime(0)
  npa_facilitador_funcao_updated_at DateTime          @default(now()) @db.DateTime(0)
  npa_facilitador                   npa_facilitador[]
}

model nps {
  nps_id               Int      @id @default(autoincrement())
  nps_nota_dia         String   @db.VarChar(30)
  nps_nota_facilitador String?  @db.VarChar(30)
  nps_nota_consultor   String?  @db.VarChar(30)
  nps_day              String   @db.VarChar(30)
  nps_comentario       String?  @db.Text
  turma_codigo         String   @db.VarChar(30)
  aluno_id             Int
  nps_created_at       DateTime @default(now()) @db.DateTime(0)
  nps_updated_at       DateTime @default(now()) @db.DateTime(0)
}

model op_type_compliance {
  compliance_id                 Int       @id @default(autoincrement())
  formacao                      String?   @db.VarChar(100)
  aluno_id                      Int?
  email                         String?   @db.VarChar(500)
  nome                          String?   @db.VarChar(500)
  cpf                           String?   @db.VarChar(500)
  data_nascimento               DateTime? @db.Date
  celular                       String?   @db.VarChar(30)
  escolaridade                  String?   @db.VarChar(500)
  genero                        String?   @db.VarChar(100)
  sexo                          String?   @db.VarChar(100)
  etnia                         String?   @db.VarChar(100)
  orientacao_sexual             String?   @db.VarChar(100)
  deficiencia                   String?   @db.VarChar(100)
  CEP                           String?   @db.VarChar(100)
  rua                           String?   @db.VarChar(1000)
  numero                        Int?
  complemento                   String?   @db.VarChar(500)
  bairro                        String?   @db.VarChar(1000)
  cidade                        String?   @db.VarChar(1000)
  estado                        String?   @db.VarChar(500)
  atual_curso                   String?   @db.VarChar(500)
  atual_semestre                String?   @db.VarChar(200)
  atual_uni                     String?   @db.VarChar(1000)
  graduacao_curso               String?   @db.VarChar(500)
  graduacao_ano                 String?   @db.VarChar(200)
  graduacao_uni                 String?   @db.VarChar(1000)
  posgrad_curso                 String?   @db.VarChar(500)
  posgrad_ano                   String?   @db.VarChar(200)
  posgrad_uni                   String?   @db.VarChar(1000)
  doutorado_curso               String?   @db.VarChar(500)
  doutorado_ano                 String?   @db.VarChar(200)
  doutorado_uni                 String?   @db.VarChar(1000)
  possui_exp                    String?   @db.VarChar(100)
  tempo_exp                     String?   @db.VarChar(500)
  trabalhando                   String?   @db.VarChar(100)
  cargo_atual                   String?   @db.VarChar(500)
  area_empresa                  String?   @db.VarChar(500)
  nome_empresa                  String?   @db.VarChar(1000)
  setor_empresa                 String?   @db.VarChar(500)
  linkedin                      String?   @db.VarChar(3000)
  objetivo_curso                String?   @db.VarChar(500)
  aceita_termos                 String?   @db.VarChar(100)
  compliance                    String?   @db.VarChar(100)
  aceita_indica                 String?   @db.VarChar(100)
  camiseta                      String?   @db.VarChar(100)
  submit_date                   DateTime? @db.DateTime(0)
  op_type_compliance_created_at DateTime  @default(now()) @db.DateTime(0)
  op_type_compliance_updated_at DateTime  @default(now()) @db.DateTime(0)
}

model oportunidade {
  op_id                   Int      @id @default(autoincrement())
  op_data                 String   @db.VarChar(300)
  op_interesse            Int
  lead_id                 Int
  oportunidade_created_at DateTime @default(now()) @db.DateTime(0)
  oportunidade_updated_at DateTime @default(now()) @db.DateTime(0)
}

model pagarme_assinatura {
  assinatura_id                  Int      @id @default(autoincrement())
  assinatura_pagarme_id          Int      @unique(map: "assinatura_pagarme_id")
  aluno_nome                     String   @db.Text
  aluno_email                    String   @db.Text
  assinatura_status              Int
  assinatura_data_created        DateTime @db.DateTime(0)
  assinatura_data_updated        DateTime @db.DateTime(0)
  assinatura_data_periodo_inicio DateTime @db.DateTime(0)
  assinatura_data_periodo_fim    DateTime @db.DateTime(0)
  pagarme_assinatura_created_at  DateTime @default(now()) @db.DateTime(0)
  pagarme_assinatura_updated_at  DateTime @default(now()) @db.DateTime(0)
}

model pagarme_parcela {
  parcela_id                 Int      @id @default(autoincrement())
  transacao_pagarme_id       Int
  parcela_status             Int
  parcela_data               DateTime @db.DateTime(0)
  assinatura_pagarme_id      Int
  pagarme_parcela_created_at DateTime @default(now()) @db.DateTime(0)
  pagarme_parcela_updated_at DateTime @default(now()) @db.DateTime(0)
}

model pipe_b2b_log_movimentacao {
  log_b2b_id                 Int       @id @default(autoincrement())
  log_b2b_card_id            Int       @unique(map: "log_b2b_card_id")
  log_b2b_fase               String?   @db.VarChar(100)
  log_b2b_nome               String?   @db.VarChar(150)
  log_b2b_telefone           String?   @db.VarChar(100)
  log_b2b_whatsapp           String?   @db.VarChar(100)
  log_b2b_email              String?   @db.VarChar(150)
  log_b2b_empresa            String?   @db.VarChar(50)
  log_b2b_cargo              String?   @db.VarChar(50)
  log_b2b_canal_prospeccao   String?   @db.VarChar(50)
  log_b2b_forma_contato      String?   @db.VarChar(100)
  log_b2b_pitch              String?   @db.VarChar(150)
  log_b2b_num_propostas_rel1 String?   @db.VarChar(150)
  log_b2b_num_propostas_rel2 String?   @db.VarChar(150)
  log_b2b_num_propostas_rel3 String?   @db.VarChar(150)
  log_b2b_criado_em          DateTime? @db.DateTime(0)
  log_b2b_dthr_update        DateTime  @default(now()) @db.DateTime(0)
  log_b2b_dthr_banco         DateTime  @default(now()) @db.DateTime(0)
}

model pipe_b2b_log_propostas {
  log_proposta_id                  Int       @id @default(autoincrement())
  log_proposta_numero              Int       @unique(map: "log_proposta_numero")
  log_proposta_fase                String?   @db.VarChar(150)
  log_proposta_empresa             String?   @db.VarChar(150)
  log_proposta_nome_contato        String?   @db.VarChar(150)
  log_proposta_dthr_apresentacao   String?   @db.VarChar(150)
  log_proposta_valor               Float?    @db.Float
  log_proposta_colaborador_valor   Float?    @db.Float
  log_proposta_num_fup             Int?
  log_proposta_valor_final         Float?    @db.Float
  log_proposta_motivo_lost         String?   @db.Text
  log_proposta_criado_em           DateTime? @db.DateTime(0)
  log_proposta_dthr_update         DateTime? @default(now()) @db.DateTime(0)
  log_proposta_dthr_banco          DateTime? @default(now()) @db.DateTime(0)
  log_proposta_start_form          DateTime? @db.DateTime(0)
  log_proposta_escopo_programa     DateTime? @db.DateTime(0)
  log_proposta_orcamento           DateTime? @db.DateTime(0)
  log_proposta_elaboracao_proposta DateTime? @db.DateTime(0)
  log_proposta_apresentacao_envio  DateTime? @db.DateTime(0)
  log_proposta_followup            DateTime? @db.DateTime(0)
  log_proposta_registro_doc        DateTime? @db.DateTime(0)
  log_proposta_ganho               DateTime? @db.DateTime(0)
  log_proposta_lost                DateTime? @db.DateTime(0)
}

model pipe_bp_funil_parcerias {
  bp_funil_card_id          Int       @id
  bp_funil_nome_empresa     String?   @db.VarChar(150)
  bp_funil_fase             String?   @db.VarChar(150)
  bp_funil_label            String?   @db.VarChar(45)
  bp_funil_contato_nome     String?   @db.VarChar(150)
  bp_funil_contato_email    String?   @db.VarChar(150)
  bp_funil_contato_telefone String?   @db.VarChar(150)
  bp_funil_contato_cargo    String?   @db.VarChar(150)
  bp_funil_num_funcionarios Int?
  bp_funil_canal            String?   @db.VarChar(150)
  bp_funil_segmento         String?   @db.VarChar(150)
  bp_funil_curso            String?   @db.VarChar(150)
  bp_funil_tamanho_empresa  String?   @db.VarChar(150)
  bp_funil_responsavel      String?   @db.VarChar(150)
  bp_funil_persona          String?   @db.VarChar(150)
  bp_funil_objecao          String?   @db.VarChar(150)
  bp_funil_qtd_projetos     Int?
  bp_funil_hiring           String?   @db.VarChar(150)
  bp_funil_b2b              String?   @db.VarChar(150)
  bp_funil_onboarding       String?   @db.VarChar(150)
  bp_funil_contrato_status  String?   @db.VarChar(150)
  bp_funil_dthr_criado_em   DateTime? @db.DateTime(0)
  bp_funil_dthr_update      DateTime? @default(now()) @db.DateTime(0)
  bp_funil_dthr_banco       DateTime? @default(now()) @db.DateTime(0)
  bp_funil_start_form       DateTime? @db.DateTime(0)
  bp_funil_nao_contatado    DateTime? @db.DateTime(0)
  bp_funil_contatado        DateTime? @db.DateTime(0)
  bp_funil_proposta         DateTime? @db.DateTime(0)
  bp_funil_diagnostico      DateTime? @db.DateTime(0)
  bp_funil_app_juridica     DateTime? @db.DateTime(0)
  bp_funil_ganho            DateTime? @db.DateTime(0)
  bp_funil_lost             DateTime? @db.DateTime(0)
}

model pipe_cx_trancamentos {
  cx_trancamentos_id              Int       @id @default(autoincrement())
  cx_card_id                      Int?      @unique(map: "cx_trancamentos_card_id")
  cx_card_fase_atual              String?   @db.VarChar(100)
  cx_aluno_nome_completo          String?   @db.VarChar(100)
  cx_aluno_cpf                    String?   @db.VarChar(100)
  cx_aluno_email                  String?   @db.VarChar(300)
  cx_aluno_telefone               String?   @db.VarChar(100)
  cx_data_solicitacao_trancamento DateTime? @db.Date
  cx_bolsista                     String?   @db.VarChar(100)
  cx_curso                        String?   @db.VarChar(100)
  cx_motivo                       String?   @db.VarChar(100)
  cx_motivo_detalhes              String?   @db.VarChar(500)
  cx_pretende_refazer             String?   @db.VarChar(100)
  cx_ciente_parcelas              String?   @db.VarChar(100)
  cx_valor_estorno_passivel       Decimal?  @db.Decimal(15, 2)
  cx_valor_multa                  String?   @db.VarChar(100)
  cx_valor_estornado              Decimal?  @db.Decimal(15, 2)
  cx_motivo_estorno               String?   @db.VarChar(500)
  cx_agente_responsavel           String?   @db.VarChar(100)
  cx_agente_responsavel_final     String?   @db.VarChar(100)
  cx_log_fases                    String?   @db.VarChar(100)
  cx_data_trancamento             DateTime? @db.DateTime(0)
  cx_data_alocacao                DateTime? @db.DateTime(0)
  cx_data_nao_deseja_refazer      DateTime? @db.DateTime(0)
  cx_data_registro                DateTime? @db.DateTime(0)
  cx_data_trancamento_revertido   DateTime? @db.DateTime(0)
  cx_data_solicitacao_estorno     DateTime? @db.DateTime(0)
  cx_data_estorno_aprovado        DateTime? @db.DateTime(0)
  cx_data_estorno_revertido       DateTime? @db.DateTime(0)
  cx_trancamentos_dthr_banco      DateTime? @default(now()) @db.DateTime(0)
  cx_trancamentos_dthr_update     DateTime? @default(now()) @db.DateTime(0)
}

model pipe_jpy_acompanhamento {
  acmp_card_id               Int       @id @default(autoincrement())
  acmp_fase                  String?   @db.VarChar(100)
  acmp_label                 String?   @db.VarChar(100)
  acmp_data_vcto_card        DateTime? @db.DateTime(0)
  acmp_criador               String?   @db.VarChar(100)
  acmp_responsavel           String?   @db.VarChar(100)
  acmp_data_finalizacao      DateTime? @db.DateTime(0)
  acmp_data_criacao          DateTime? @db.DateTime(0)
  acmp_data_atualizacao      DateTime? @db.DateTime(0)
  acmp_nome_empresa          String?   @db.VarChar(100)
  acmp_nome                  String?   @db.VarChar(100)
  acmp_email                 String?   @db.VarChar(100)
  acmp_cargo                 String?   @db.VarChar(100)
  acmp_telefone              String?   @db.VarChar(25)
  acmp_data_primeira_call    DateTime? @db.Date
  acmp_url_meet              String?   @db.VarChar(500)
  acmp_dono_lead             String?   @db.VarChar(100)
  acmp_qtd_colab             Int?
  acmp_valor_usuario         Decimal?  @db.Decimal(15, 2)
  acmp_data_vcto_impl        DateTime? @db.DateTime(0)
  acmp_modelo_empresa        String?   @db.VarChar(100)
  acmp_qualidade_alinhamento String?   @db.VarChar(100)
  acmp_touch_mensal          DateTime? @db.Date
  acmp_url_relatorios        String?   @db.VarChar(500)
  acmp_data_fim_contrato     DateTime? @db.Date
  acmp_dia_virada            Int?
  acmp_motivo_cancelamento   String?   @db.VarChar(500)
  acmp_dificuldade           String?   @db.VarChar(3000)
  acmp_data_implementacao    DateTime? @db.DateTime(0)
  acmp_data_acompanhamento   DateTime? @db.DateTime(0)
  acmp_data_cancelamento     DateTime? @db.DateTime(0)
  acmp_updated_at            DateTime  @default(now()) @db.DateTime(0)
}

model pipe_jpy_business_dev {
  business_card_id            Int       @id @default(autoincrement())
  business_fase               String?   @db.VarChar(100)
  business_label              String?   @db.VarChar(100)
  business_data_vcto          DateTime? @db.DateTime(0)
  business_criador            String?   @db.VarChar(100)
  business_responsaveis       String?   @db.VarChar(100)
  business_data_finalizacao   DateTime? @db.DateTime(0)
  business_data_criacao       DateTime? @db.DateTime(0)
  business_data_atualizacao   DateTime? @db.DateTime(0)
  business_canal_entrada      String?   @db.VarChar(100)
  business_empresa            String?   @db.VarChar(100)
  business_contato            String?   @db.VarChar(100)
  business_email              String?   @db.VarChar(100)
  business_cargo              String?   @db.VarChar(100)
  business_telefone           String?   @db.VarChar(25)
  business_loc                String?   @db.VarChar(500)
  business_segmento           String?   @db.VarChar(100)
  business_qtd_colab          Int?
  business_dono_lead          String?   @db.VarChar(100)
  business_url_rd             String?   @db.VarChar(500)
  business_porte              String?   @db.VarChar(100)
  business_id_oportunidade    Int?
  business_utm_campaign       String?   @db.VarChar(100)
  business_utm_medium         String?   @db.VarChar(100)
  business_utm_source         String?   @db.VarChar(500)
  business_lead_squad         String?   @db.VarChar(100)
  business_canal_op           String?   @db.VarChar(100)
  business_pitch              String?   @db.VarChar(100)
  business_canal_contato      String?   @db.VarChar(100)
  business_modelo_empresa     String?   @db.VarChar(100)
  business_fup                String?   @db.VarChar(100)
  business_ligacao            String?   @db.VarChar(100)
  business_qtd_colab_ligacao  Int?
  business_lead_call          String?   @db.VarChar(100)
  business_data_call          DateTime? @db.Date
  business_motivo_lost        String?   @db.VarChar(500)
  business_ferramenta         String?   @db.VarChar(100)
  business_data_nao_contatado DateTime? @db.DateTime(0)
  business_data_contatado     DateTime? @db.DateTime(0)
  business_data_ligacao       DateTime? @db.DateTime(0)
  business_data_demonstracao  DateTime? @db.DateTime(0)
  business_data_ganho         DateTime? @db.DateTime(0)
  business_data_lost          DateTime? @db.DateTime(0)
  business_updated_at         DateTime  @default(now()) @db.DateTime(0)
}

model pipe_jpy_closer {
  closer_card_id                    Int       @id @default(autoincrement())
  closer_fase                       String?   @db.VarChar(100)
  closer_label                      String?   @db.VarChar(100)
  closer_data_vencimento            DateTime? @db.DateTime(0)
  closer_criador                    String?   @db.VarChar(300)
  closer_responsavel                String?   @db.VarChar(300)
  closer_data_finalizacao           DateTime? @db.DateTime(0)
  closer_data_criacao               DateTime? @db.DateTime(0)
  closer_data_atualizacao           DateTime? @db.DateTime(0)
  closer_canal_entrada              String?   @db.VarChar(100)
  closer_nome_empresa               String?   @db.VarChar(300)
  closer_nome                       String?   @db.VarChar(300)
  closer_email                      String?   @db.VarChar(300)
  closer_cargo                      String?   @db.VarChar(300)
  closer_telefone                   String?   @db.VarChar(25)
  closer_segmento                   String?   @db.VarChar(300)
  closer_qtd_colab                  Int?
  closer_data_demo                  DateTime? @db.Date
  closer_dono_lead                  String?   @db.VarChar(300)
  closer_url_rd                     String?   @db.VarChar(300)
  closer_porte_empresa              String?   @db.VarChar(300)
  closer_id_oportunidade            Int?
  closer_utm_campaign               String?   @db.VarChar(100)
  closer_utm_medium                 String?   @db.VarChar(100)
  closer_utm_source                 String?   @db.VarChar(100)
  closer_lead_squad                 String?   @db.VarChar(100)
  closer_canal_op                   String?   @db.VarChar(100)
  closer_teve_no_show               String?   @db.VarChar(10)
  closer_nova_data_demo             DateTime? @db.Date
  closer_call_realizada             String?   @db.VarChar(10)
  closer_tomador_decisao            String?   @db.VarChar(10)
  closer_features_interesse         String?   @db.VarChar(3000)
  closer_principais_objecoes        String?   @db.VarChar(3000)
  closer_features_solicitadas       String?   @db.VarChar(3000)
  closer_qualidade_lead             String?   @db.VarChar(10)
  closer_termometro_call            Int?
  closer_proximo_passo              String?   @db.VarChar(200)
  closer_modo_pagamento             String?   @db.VarChar(200)
  closer_qtd_usuarios               Int?
  closer_valor_usuario              Decimal?  @db.Decimal(15, 2)
  closer_data_implementacao         DateTime? @db.Date
  closer_fase_assinatura            String?   @db.VarChar(200)
  closer_valor_contrato             Decimal?  @db.Decimal(15, 2)
  closer_motivo_lost                String?   @db.VarChar(200)
  closer_data_pediu_contato         DateTime? @db.Date
  closer_data_demonstracao_agendada DateTime? @db.DateTime(0)
  closer_data_demonstracao          DateTime? @db.DateTime(0)
  closer_data_negociacao            DateTime? @db.DateTime(0)
  closer_data_assinatura_termo      DateTime? @db.DateTime(0)
  closer_data_ganho                 DateTime? @db.DateTime(0)
  closer_data_lost                  DateTime? @db.DateTime(0)
  closer_updated_at                 DateTime  @default(now()) @db.DateTime(0)
}

model pipe_px_kanban_projetos {
  px_kanban_projetos_id                          Int       @id @default(autoincrement())
  px_kanban_projetos_card_id                     Int       @unique(map: "px_kanban_projetos_card_id_UNIQUE")
  px_kanban_projetos_label                       String?   @db.VarChar(45)
  px_kanban_projetos_curso                       String?   @db.VarChar(45)
  px_kanban_projetos_codigo_grupo                String?   @db.VarChar(45)
  px_kanban_projetos_nome_empresa                String?   @db.VarChar(45)
  px_kanban_projetos_area_projeto                String?   @db.VarChar(45)
  px_kanban_projetos_titulo_projeto              String?   @db.VarChar(45)
  px_kanban_projetos_nome_sponsor                String?   @db.VarChar(45)
  px_kanban_projetos_nome_mentor                 String?   @db.VarChar(45)
  px_kanban_projetos_nome_do_po                  String?   @db.VarChar(45)
  px_kanban_projetos_fase                        String    @default("Start form") @db.VarChar(45)
  px_kanban_projetos_data_criacao                DateTime  @default(now()) @db.DateTime(0)
  px_kanban_projetos_motivo_cancelamento         String?   @db.VarChar(45)
  px_kanban_projetos_detalhe_motivo_cancelamento String?   @db.VarChar(145)
  px_kanban_projetos_data_cancelamento           DateTime? @db.DateTime(0)
  px_kanban_projetos_start_form                  DateTime? @db.DateTime(0)
  px_kanban_projetos_em_andamento                DateTime? @db.DateTime(0)
  px_kanban_projetos_com_problema                DateTime? @db.DateTime(0)
  px_kanban_projetos_concluido                   DateTime? @db.DateTime(0)
  px_kanban_projetos_cancelados                  DateTime? @db.DateTime(0)
  pipe_px_kanban_projetos_updated_at             DateTime  @default(now()) @db.DateTime(0)
}

model pipe_px_log_parcerias {
  log_parceria_id               Int       @id @default(autoincrement())
  log_parceria_card_id          Int       @unique(map: "log_parceria_card_id")
  log_parceria_fase             String?   @db.VarChar(150)
  log_parceria_label            String?   @db.VarChar(45)
  log_parceria_nome             String?   @db.VarChar(150)
  log_parceria_telefone         String?   @db.VarChar(150)
  log_parceria_email            String?   @db.VarChar(150)
  log_parceria_empresa          String?   @db.VarChar(150)
  log_parceria_cargo            String?   @db.VarChar(150)
  log_parceria_num_funcionarios Int?
  log_parceria_canal            String?   @db.VarChar(150)
  log_parceria_segmento         String?   @db.VarChar(150)
  log_parceria_curso            String?   @db.VarChar(150)
  log_parceria_tamanho_empresa  String?   @db.VarChar(150)
  log_parceria_responsavel      String?   @db.VarChar(150)
  log_parceria_persona          String?   @db.VarChar(150)
  log_parceria_objecao          String?   @db.VarChar(150)
  log_parceria_qtd_projetos     Int?
  log_parceria_hiring           String?   @db.VarChar(150)
  log_parceria_b2b              String?   @db.VarChar(150)
  log_parceria_onbording        String?   @db.VarChar(150)
  log_parceria_contrato_status  String?   @db.VarChar(150)
  log_parceria_dthr_criado_em   DateTime? @db.DateTime(0)
  log_parceria_dthr_update      DateTime? @default(now()) @db.DateTime(0)
  log_parceria_dthr_banco       DateTime? @default(now()) @db.DateTime(0)
  log_parceria_start_form       DateTime? @db.DateTime(0)
  log_parceria_nao_contatado    DateTime? @db.DateTime(0)
  log_parceria_contatado        DateTime? @db.DateTime(0)
  log_parceria_proposta         DateTime? @db.DateTime(0)
  log_parceria_diagnostico      DateTime? @db.DateTime(0)
  log_parceria_app_juridica     DateTime? @db.DateTime(0)
  log_parceria_ganho            DateTime? @db.DateTime(0)
  log_parceria_lost             DateTime? @db.DateTime(0)
}

model pipe_px_projetos_com_problema {
  px_pp_id           Int       @id @default(autoincrement())
  px_pp_card_id      Int
  px_pp_fase_card    String    @db.VarChar(150)
  px_pp_label        String?   @db.VarChar(45)
  px_pp_nome_empresa String?   @db.VarChar(150)
  px_pp_codigo_grupo String?   @db.VarChar(150)
  px_pp_ticket_macro String?   @db.VarChar(150)
  px_pp_curso        String?   @db.VarChar(150)
  px_pp_ticket_micro String?   @db.VarChar(150)
  px_pp_responsavel  String?   @db.VarChar(150)
  px_pp_sla          String?   @db.VarChar(150)
  px_pp_data_criacao DateTime  @default(now()) @db.DateTime(0)
  px_pp_start_form   DateTime? @db.DateTime(0)
  px_pp_backlog      DateTime? @db.DateTime(0)
  px_pp_resolvendo   DateTime? @db.DateTime(0)
  px_pp_followup     DateTime? @db.DateTime(0)
  px_pp_done         DateTime? @db.DateTime(0)
  px_pp_updated_at   DateTime  @default(now()) @db.DateTime(0)

  @@unique([px_pp_card_id, px_pp_fase_card], map: "index")
}

model pipefy_atividade_log {
  atividade_id                    Int      @id @default(autoincrement())
  conversao_canal                 String   @db.Text
  lead_email                      String   @db.Text
  lead_nome                       String   @db.Text
  pipefy_etapa                    String   @db.Text
  pipefy_atividade_registrada     String   @db.Text
  pipefy_atividade_tipo           String   @db.Text
  pipefy_responsavel              String   @db.Text
  atividade_data                  DateTime @default(now()) @db.DateTime(0)
  card_id                         Int
  card_id_origem                  Int?
  pipefy_atividade_log_updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([card_id], map: "card_id_idx")
  @@index([conversao_canal(length: 300)], map: "conversao_canal_idx")
  @@index([lead_email(length: 300)], map: "lead_email_idx")
  @@index([pipefy_responsavel(length: 300)], map: "pipefy_responsavel_idx")
}

model polo {
  polo_id         Int      @id @default(autoincrement())
  polo_nome       String   @db.VarChar(150)
  polo_estado     String   @db.VarChar(3)
  consultor_id    Int?
  polo_created_at DateTime @default(now()) @db.DateTime(0)
  polo_updated_at DateTime @default(now()) @db.DateTime(0)
  agenda          agenda[]
}

model pontuacao {
  pontuacao_id         Int      @id @default(autoincrement())
  pontuacao_ponto      String   @db.Text
  pontuacao_data       DateTime @default(now()) @db.DateTime(0)
  aluno_id             Int
  pontuacao_updated_at DateTime @default(now()) @db.DateTime(0)
  aluno                aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "pontuacao_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
}

model presenca_masp_agendada {
  presenca_masp_agendada_id         Int                                       @id @default(autoincrement())
  profissional_id                   Int
  data_agendada                     DateTime                                  @db.DateTime(0)
  status_agendamento                presenca_masp_agendada_status_agendamento
  presenca_masp_id                  Int
  data_criacao                      DateTime                                  @default(now()) @db.DateTime(0)
  data_atualizacao                  DateTime                                  @default(now()) @db.DateTime(0)
  presenca_masp_agendada_created_at DateTime                                  @default(now()) @db.DateTime(0)
  presenca_masp_agendada_updated_at DateTime                                  @default(now()) @db.DateTime(0)
  dnc_profissionais                 dnc_profissionais                         @relation(fields: [profissional_id], references: [profissional_id], onDelete: Cascade, map: "presenca_masp_agendada_ibfk_1")
  dnc_presenca_masp                 dnc_presenca_masp                         @relation(fields: [presenca_masp_id], references: [presenca_masp_id], onUpdate: Restrict, map: "presenca_masp_agendada_ibfk_2")

  @@index([profissional_id], map: "presenca_masp_agendada_ibfk_1")
  @@index([presenca_masp_id], map: "presenca_masp_id")
}

model presencas {
  presenca_id           Int                        @id @default(autoincrement())
  aluno_id              Int
  turma_codigo          String                     @db.VarChar(20)
  presenca_day1         Int?                       @default(0)
  presenca_day2         Int?                       @default(0)
  presenca_day3         Int?                       @default(0)
  presenca_day4         Int?                       @default(0)
  presenca_day5         Int?                       @default(0)
  presenca_day6         Int?                       @default(0)
  presenca_day7         Int?                       @default(0)
  presenca_day8         Int?                       @default(0)
  presenca_day9         Int?                       @default(0)
  presenca_day10        Int?                       @default(0)
  presenca_day11        Int?                       @default(0)
  presenca_day12        Int?                       @default(0)
  presenca_day13        Int?
  presenca_score_lab    Int?                       @default(0)
  presenca_banca        Int?                       @default(0)
  presenca_participacao Int?                       @default(0)
  presenca_prova        Int?                       @default(0)
  presenca_final        Int?                       @default(0)
  presenca_total        Int?                       @default(0)
  presenca_status       presencas_presenca_status? @default(L)
  presenca_dthr         DateTime                   @default(now()) @db.DateTime(0)
  presencas_created_at  DateTime                   @default(now()) @db.DateTime(0)
  aluno                 aluno                      @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "presencas_ibfk_1")

  @@unique([aluno_id, turma_codigo], map: "aluno_turma")
}

model quiz_empresa {
  quiz_empresa_id         Int      @id @default(autoincrement())
  aluno_nome              String   @db.Text
  aluno_email             String   @db.Text
  quiz_empresa_data       DateTime @default(now()) @db.DateTime(0)
  quiz_empresa_grupo      String?  @db.VarChar(20)
  quiz_empresa_updated_at DateTime @default(now()) @db.DateTime(0)
}

model quiz_resultado {
  resultado_id                Int       @id @default(autoincrement())
  resultado_nome              String    @db.Text
  resultado_email             String    @db.Text
  resultado_telefone          String    @db.Text
  resultado_data_criacao      DateTime  @default(now()) @db.DateTime(0)
  resultado_data_final        DateTime? @db.DateTime(0)
  resultado_1_area_id         Int?
  resultado_2_area_id         Int?
  resultado_3_area_id         Int?
  resultado_4_area_id         Int?
  resultado_5_area_id         Int?
  resultado_6_area_id         Int?
  resultado_7_area_id         Int?
  resultado_8_area_id         Int?
  resultado_9_area_id         Int?
  resultado_10_area_id        Int?
  resultado_11_area_id        Int?
  resultado_12_area_id        Int?
  resultado_13_area_id        Int?
  resultado_14_area_id        Int?
  resultado_15_area_id        Int?
  resultado_16_area_id        Int?
  resultado_17_area_id        Int?
  resultado_18_area_id        Int?
  resultado_19_area_id        Int?
  resultado_20_area_id        Int?
  resultado_21_area_id        Int?
  utm_source                  String?   @db.VarChar(255)
  utm_medium                  String?   @db.VarChar(255)
  utm_campaign                String?   @db.VarChar(255)
  resultado_url               String?   @db.Text
  resultado_21_area_pontuacao Int?
  resultado_20_area_pontuacao Int?
  resultado_19_area_pontuacao Int?
  resultado_18_area_pontuacao Int?
  resultado_17_area_pontuacao Int?
  resultado_16_area_pontuacao Int?
  resultado_15_area_pontuacao Int?
  resultado_14_area_pontuacao Int?
  resultado_13_area_pontuacao Int?
  resultado_12_area_pontuacao Int?
  resultado_11_area_pontuacao Int?
  resultado_10_area_pontuacao Int?
  resultado_9_area_pontuacao  Int?
  resultado_8_area_pontuacao  Int?
  resultado_7_area_pontuacao  Int?
  resultado_6_area_pontuacao  Int?
  resultado_5_area_pontuacao  Int?
  resultado_4_area_pontuacao  Int?
  resultado_3_area_pontuacao  Int?
  resultado_2_area_pontuacao  Int?
  resultado_1_area_pontuacao  Int?
  quiz_resultado_updated_at   DateTime  @default(now()) @db.DateTime(0)
}

model rastreio_kit {
  rastreio_kit_id          Int                   @id @default(autoincrement())
  softcheck_grupo_aluno_id Int
  codigo_rastreio          String                @db.VarChar(200)
  data_criacao             DateTime              @default(now()) @db.DateTime(0)
  rastreio_kit_updated_at  DateTime              @default(now()) @db.DateTime(0)
  softcheck_grupo_aluno    softcheck_grupo_aluno @relation(fields: [softcheck_grupo_aluno_id], references: [softcheck_grupo_aluno_id], onUpdate: Restrict, map: "fk_softcheck_grupo_aluno_id")

  @@index([softcheck_grupo_aluno_id], map: "fk_softcheck_grupo_aluno_id")
}

model rd_fase {
  rd_fase_id         Int      @id @default(autoincrement())
  rd_fase_nome       String   @db.VarChar(255)
  rd_fase_created_at DateTime @default(now()) @db.DateTime(0)
  rd_fase_updated_at DateTime @default(now()) @db.DateTime(0)
}

model rd_log_conversoes {
  log_conversao_id     Int      @id @default(autoincrement())
  json_recebido_rd     Json?
  json_dados_lead      Json?
  json_dados_conversao Json?
  json_update_rd       Json?
  json_final_funcao    Json?
  log_data_create      DateTime @default(now()) @db.DateTime(0)
  log_data_update      DateTime @default(now()) @db.DateTime(0)
}

model rd_log_curso_gratuito {
  log_id                   Int                                             @id @default(autoincrement())
  json_lead                Json?
  log_aluno_status         rd_log_curso_gratuito_log_aluno_status?
  log_operacao_status      rd_log_curso_gratuito_log_operacao_status?
  log_identificador_status rd_log_curso_gratuito_log_identificador_status?
  log_dthr_criacao         DateTime                                        @default(now()) @db.DateTime(0)
  log_dthr_update          DateTime                                        @default(now()) @db.DateTime(0)
}

model rd_log_movimentacao {
  oportunidade_id                Int      @id @default(autoincrement())
  oportunidade_email             String   @db.VarChar(255)
  oportunidade_nome              String?  @db.VarChar(255)
  oportunidade_canal             String?  @db.VarChar(255)
  oportunidade_telefone          String?  @db.VarChar(255)
  oportunidade_estado            String?  @db.VarChar(300)
  oportunidade_cidade            String?  @db.VarChar(255)
  oportunidade_dono              String?  @db.VarChar(255)
  vendedor_id                    Int?
  oportunidade_url               String?  @db.VarChar(255)
  oportunidade_valor             String?  @db.VarChar(255)
  oportunidade_cpf               String?  @db.VarChar(200)
  oportunidade_forma             String?  @db.VarChar(300)
  rd_fase_id                     Int?
  label                          String?  @db.VarChar(255)
  oportunidade_data              DateTime @default(now()) @db.DateTime(0)
  card_id                        Int?
  rd_oportunidade_id             Int
  rd_log_movimentacao_updated_at DateTime @default(now()) @db.DateTime(0)
}

model rd_oportunidade {
  oportunidade_id                               Int      @id @default(autoincrement())
  vendedor_id                                   Int
  oportunidade_email                            String   @db.VarChar(255)
  oportunidade_data                             DateTime @default(now()) @db.DateTime(0)
  oportunidade_canal                            String?  @db.VarChar(255)
  oportunidade_utm_campaign                     String?  @db.VarChar(250)
  oportunidade_utm_medium                       String?  @db.VarChar(250)
  oportunidade_utm_source                       String?  @db.VarChar(250)
  oportunidade_lead_squad                       String?  @db.VarChar(250)
  oportunidade_abrangencia_conhecimento         String   @db.VarChar(500)
  oportunidade_disponibilidade_tempo            String   @db.VarChar(500)
  oportunidade_objetivo_profissional            String   @db.VarChar(500)
  oportunidade_linguagem_programacao            String?  @db.Text
  oportunidade_area_atuacao                     String?  @db.Text
  oportunidade_objetivo_carreira                String?  @db.Text
  oportunidade_idade                            String?  @db.Text
  oportunidade_telefone                         String   @db.Text
  oportunidade_whatsapp                         String   @db.Text
  oportunidade_interesse_indicacao              String?  @db.Text
  oportunidade_rd_url                           String   @db.Text
  oportunidade_fit_score                        String?  @db.VarChar(50)
  oportunidade_fit_interest                     Int?
  oportunidade_empresa                          String?  @db.VarChar(300)
  oportunidade_linkedin                         String?  @db.VarChar(500)
  oportunidade_qualificador_jumpy_cargo         String?  @db.VarChar(200)
  oportunidade_qualificador_jumpy_porte_empresa String?  @db.VarChar(200)
  rd_oportunidade_updated_at                    DateTime @default(now()) @db.DateTime(0)

  @@index([oportunidade_canal], map: "oportunidade_canal_idx")
  @@index([oportunidade_email], map: "oportunidade_email_idx")
  @@index([oportunidade_utm_campaign], map: "oportunidade_utm_campaign_idx")
  @@index([oportunidade_utm_medium], map: "oportunidade_utm_medium_idx")
  @@index([oportunidade_utm_source], map: "oportunidade_utm_source_idx")
}

model rd_perda {
  perda_id               Int      @id @default(autoincrement())
  card_id                Int?
  perda_nome             String   @db.VarChar(255)
  perda_email            String   @db.VarChar(255)
  perda_responsavel      String   @db.VarChar(255)
  perda_fase             String   @db.VarChar(255)
  perda_motivo           String   @db.VarChar(255)
  perda_data             DateTime @default(now()) @db.DateTime(0)
  perda_data_atualizacao DateTime @default(now()) @db.DateTime(0)

  @@index([card_id], map: "card_id_idx")
}

model rd_vendedores {
  vendedor_id                    Int      @id @default(autoincrement())
  vendedor_nome                  String?  @db.VarChar(200)
  vendedor_email                 String?  @db.VarChar(255)
  vendedor_status                Int      @default(0) @db.TinyInt
  vendedor_tem_lead              Int      @default(0)
  vendedor_tem_lead_secreto      Int      @default(0)
  vendedor_especialista          Int?     @default(0)
  vendedor_especialista_curso_id Int?
  vendedor_squad                 String?  @db.VarChar(100)
  vendedor_dthr_criacao          DateTime @default(now()) @db.DateTime(0)
  vendedor_dthr_update           DateTime @default(now()) @db.DateTime(0)
}

model regra {
  regra_id           Int             @id @default(autoincrement())
  regra_categoria_id Int
  regra_nota         Int
  regra_quantidade   Int
  regra_nota_ranking Int
  curso_id           Int
  turma_codigo       String          @db.Text
  regra_versao_sigla String?         @db.Text
  regra_created_at   DateTime        @default(now()) @db.DateTime(0)
  regra_updated_at   DateTime        @default(now()) @db.DateTime(0)
  regra_categoria    regra_categoria @relation(fields: [regra_categoria_id], references: [regra_categoria_id], onUpdate: Restrict, map: "fk_categoria_regra")
  lms_curso          lms_curso       @relation(fields: [curso_id], references: [curso_id], onUpdate: Restrict, map: "regra_ibfk_1")

  @@index([curso_id], map: "curso_id")
  @@index([regra_categoria_id], map: "fk_categoria_regra")
}

model regra_categoria {
  regra_categoria_id         Int            @id @default(autoincrement())
  regra_categoria_titulo     String         @db.VarChar(200)
  regra_categoria_created_at DateTime       @default(now()) @db.DateTime(0)
  regra_categoria_updated_at DateTime       @default(now()) @db.DateTime(0)
  regra                      regra[]
  regra_versao               regra_versao[]
}

model regra_versao {
  regra_versao_id           Int             @id @default(autoincrement())
  regra_versao_sigla        String          @db.Text
  regra_categoria_id        Int
  regra_versao_nota         Int
  regra_versao_nota_ranking Int
  regra_versao_quantidade   Int
  curso_id                  Int
  data_criacao              DateTime        @default(now()) @db.DateTime(0)
  data_update               DateTime        @default(now()) @db.DateTime(0)
  lms_curso                 lms_curso       @relation(fields: [curso_id], references: [curso_id], onUpdate: Restrict, map: "fk_curso_regra_versao")
  regra_categoria           regra_categoria @relation(fields: [regra_categoria_id], references: [regra_categoria_id], onUpdate: Restrict, map: "fk_regra_categoria_regra_versao")

  @@index([curso_id], map: "fk_curso_regra_versao")
  @@index([regra_categoria_id], map: "fk_regra_categoria_regra_versao")
}

model saas_cursos {
  saas_id                Int      @id @default(autoincrement()) @db.UnsignedInt
  curso_id               Int
  data_created           DateTime @db.DateTime(0)
  data_updated           DateTime @db.DateTime(0)
  saas_cursos_created_at DateTime @default(now()) @db.DateTime(0)
  saas_cursos_updated_at DateTime @default(now()) @db.DateTime(0)
}

model score_banca {
  score_banca_id        Int       @id @default(autoincrement())
  score_banca_data      DateTime  @default(now()) @db.DateTime(0)
  score_banca_pontuacao Int
  consultor_nome        String    @db.Text
  score_banca_q1        Float?    @default(0) @db.Float
  score_banca_q2        Float?    @default(0) @db.Float
  score_banca_q3        Float?    @default(0) @db.Float
  score_banca_q4        Float?    @default(0) @db.Float
  score_banca_q5        Float?    @default(0) @db.Float
  score_banca_q6        Float?    @default(0) @db.Float
  score_banca_q7        Float?    @default(0) @db.Float
  score_banca_q8        Float?    @default(0) @db.Float
  grupo_codigo          String    @db.Text
  banca_dthr_criacao    DateTime? @default(now()) @db.DateTime(0)
  banca_dthr_update     DateTime  @default(now()) @db.DateTime(0)
}

model score_entrega {
  score_entrega_id         Int                   @id @default(autoincrement())
  score_entrega_url        String                @db.Text
  score_entrega_data       DateTime              @default(now()) @db.DateTime(0)
  score_entrega_numero     Int
  score_entrega_pontuacao  Int?
  score_entrega_comentario String?               @db.Text
  grupo_codigo             String                @db.Text
  score_entrega_updated_at DateTime              @default(now()) @db.DateTime(0)
  score_entrega_aluno      score_entrega_aluno[]
}

model score_entrega_aluno {
  score_entrega_aluno_id  Int           @id @default(autoincrement())
  score_entrega_id        Int
  score_entrega_numero    Int?
  score_entrega_pontuacao Int?
  aluno_id                Int?
  turma_codigo            String?       @db.VarChar(300)
  grupo_codigo            String?       @db.VarChar(300)
  log_dthr_create         DateTime?     @default(now()) @db.DateTime(0)
  log_dthr_update         DateTime?     @default(now()) @db.DateTime(0)
  aluno                   aluno?        @relation(fields: [aluno_id], references: [aluno_id], onDelete: Restrict, onUpdate: Restrict, map: "score_entrega_aluno_ibfk_1")
  score_entrega           score_entrega @relation(fields: [score_entrega_id], references: [score_entrega_id], onDelete: Cascade, map: "score_entrega_aluno_ibfk_2")

  @@unique([aluno_id, turma_codigo, score_entrega_numero], map: "index")
  @@index([score_entrega_id], map: "score_entrega_aluno_ibfk_2")
}

model score_kahoot {
  score_kahoot_id         Int      @id @default(autoincrement())
  score_kahoot_pontuacao  Int
  score_kahoot_data       DateTime @default(now()) @db.DateTime(0)
  aluno_id                Int
  turma_codigo            String   @db.Text
  score_kahoot_updated_at DateTime @default(now()) @db.DateTime(0)
}

model score_lab {
  score_lab_id         Int      @id @unique(map: "score_lab_id") @default(autoincrement())
  score_lab_exercicio  String   @db.Text
  turma_codigo         String   @db.VarChar(255)
  aluno_id             Int
  lab_data             DateTime @default(now()) @db.DateTime(0)
  score_lab_updated_at DateTime @default(now()) @db.DateTime(0)
  aluno                aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "score_lab_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
}

model score_presenca {
  presenca_id               Int        @id @default(autoincrement())
  presenca_tipo             String     @db.Text
  presenca_valor            String     @db.Text
  turma_codigo              String?    @db.Text
  curso_id                  Int?
  aluno_id                  Int
  presenca_data             DateTime   @default(now()) @db.DateTime(0)
  score_presenca_updated_at DateTime   @default(now()) @db.DateTime(0)
  aluno                     aluno      @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "score_presenca_ibfk_1")
  lms_curso                 lms_curso? @relation(fields: [curso_id], references: [curso_id], onDelete: Restrict, onUpdate: Restrict, map: "score_presenca_ibfk_2")

  @@index([aluno_id], map: "aluno_id")
  @@index([curso_id], map: "curso_id")
}

model score_presenca_banca {
  score_presenca_banca_id         Int      @id @default(autoincrement())
  aluno_id                        Int
  grupo_codigo                    String   @db.VarChar(255)
  presenca_banca_log_dthr         DateTime @default(now()) @db.DateTime(0)
  score_presenca_banca_created_at DateTime @default(now()) @db.DateTime(0)
  aluno                           aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "score_presenca_banca_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
}

model score_prova {
  score_prova_id         Int      @id @default(autoincrement())
  score_prova_numero     Int
  score_prova_data       DateTime @default(now()) @db.DateTime(0)
  score_prova_pontuacao  Int
  aluno_id               Int
  turma_codigo           String?  @db.Text
  score_prova_updated_at DateTime @default(now()) @db.DateTime(0)
  score_certificado      Int?
  aluno                  aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "score_prova_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
  @@index([turma_codigo(length: 50)], map: "turma_codigo")
}

model score_prova_externa {
  prova_id                       Int      @id @default(autoincrement())
  prova_numero                   Int
  prova_pontuacao                Int
  prova_data                     DateTime @default(now()) @db.DateTime(0)
  type_id                        Int
  aluno_email                    String   @db.Text
  score_prova_externa_updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([aluno_email(length: 300)], map: "aluno_email_idx")
}

model score_prova_tipo {
  prova_tipo_id            Int                               @id @default(autoincrement())
  prova_numero             Int
  prova_nome               String                            @db.VarChar(300)
  prova_nota_corte         Int
  treinamento_id           Int
  prova_carga              Int
  prova_certificado_imagem Int
  prova_categoria          score_prova_tipo_prova_categoria?
  descricao                String?                           @db.Text
  prova_certificado        Int                               @default(1)
  prova_ranking            Int?                              @default(1)
  certificado_sigla        String?                           @db.Text
  certificado_hex          String?                           @db.Text
  prova_data_created       DateTime                          @default(now()) @db.DateTime(0)
  prova_data_updated       DateTime                          @default(now()) @db.DateTime(0)
  treinamento              treinamento                       @relation(fields: [treinamento_id], references: [treinamento_id], onUpdate: Restrict, map: "score_prova_tipo_ibfk_1")

  @@index([treinamento_id], map: "treinamento_id")
}

model score_prova_versao {
  score_prova_versao_id         Int      @id @default(autoincrement())
  versao                        Int      @default(2)
  turma_codigo                  String   @db.Text
  prova_tipo_id                 Int
  score_prova_versao_created_at DateTime @default(now()) @db.DateTime(0)
  score_prova_versao_updated_at DateTime @default(now()) @db.DateTime(0)
}

model score_ranking {
  ranking_id                                  Int                           @id @default(autoincrement())
  aluno_id                                    Int
  turma_codigo                                String                        @db.VarChar(150)
  grupo_codigo                                String?                       @db.VarChar(150)
  maior_impacto                               score_ranking_maior_impacto?
  ranking_qtd_tarefa                          Int?
  ranking_pont_tarefa                         Int?
  ranking_qtd_entrega                         Int?
  ranking_pont_entrega                        Int?
  ranking_pont_banca                          Int?
  ranking_qtd_prova_intermediaria             Int?
  ranking_qtd_prova_intermediaria_maior_corte Int?
  ranking_prova_intermediaria                 Int?
  ranking_prova_final                         Int?
  ranking_pont_prova                          Int?
  ranking_pont_kahoot                         Int?
  ranking_pont_mediana                        Int?
  ranking_presenca                            Int?
  ranking_pont_presenca                       Int?                          @default(0)
  ranking_presenca_zoom                       Int?
  ranking_pont_presenca_zoom                  Int?                          @default(0)
  ranking_pont_total                          Int?
  ranking_status                              score_ranking_ranking_status? @default(S)
  ranking_dthr                                DateTime                      @default(now()) @db.DateTime(0)
  score_ranking_created_at                    DateTime                      @default(now()) @db.DateTime(0)
  aluno                                       aluno                         @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "score_ranking_ibfk_1")

  @@unique([aluno_id, turma_codigo], map: "aluno_id")
}

model score_tarefa {
  score_tarefa_id         Int      @id @unique(map: "score_tarefa_id") @default(autoincrement())
  score_tarefa_url        String?  @db.Text
  score_tarefa_data       DateTime @default(now()) @db.DateTime(0)
  score_tarefa_numero     Int
  score_tarefa_pontuacao  Int?
  score_tarefa_comentario String?  @db.Text
  score_tarefa_tipo       Int
  aluno_id                Int
  turma_codigo            String   @db.Text
  score_tarefa_updated_at DateTime @default(now()) @db.DateTime(0)
  aluno                   aluno    @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "score_tarefa_ibfk_1")

  @@index([aluno_id], map: "aluno_id")
}

model score_zoom_sala {
  sala_id                    Int                         @id @default(autoincrement())
  sala_url                   String?                     @db.Text
  turma_codigo               String                      @db.Text
  curso_id                   Int?
  presenca_tipo              String                      @db.Text
  presenca_valor             String                      @db.Text
  sala_data_criacao          DateTime?                   @default(now()) @db.DateTime(0)
  sala_status                Int
  sala_data_ativa_inicio     DateTime?                   @db.DateTime(0)
  sala_data_ativa_fim        DateTime?                   @db.DateTime(0)
  score_zoom_sala_updated_at DateTime                    @default(now()) @db.DateTime(0)
  lobby_conferencia          lobby_conferencia[]
  lms_curso                  lms_curso?                  @relation(fields: [curso_id], references: [curso_id], onDelete: Restrict, onUpdate: Restrict, map: "score_zoom_sala_ibfk_1")
  score_zoom_sala_liberacao  score_zoom_sala_liberacao[]

  @@index([curso_id], map: "curso_id")
}

model score_zoom_sala_liberacao {
  score_zoom_sala_liberacao_id Int             @id @default(autoincrement())
  score_zoom_sala_id           Int
  curso_id                     Int?
  turma_codigo                 String?         @db.Text
  liberacao_tipo               Int
  data_criacao                 DateTime        @default(now()) @db.DateTime(0)
  data_atualizacao             DateTime        @default(now()) @db.DateTime(0)
  score_zoom_sala              score_zoom_sala @relation(fields: [score_zoom_sala_id], references: [sala_id], onUpdate: Restrict, map: "fk1_score_zoom_sala_id")

  @@index([score_zoom_sala_id], map: "fk1_score_zoom_sala_id")
}

model softcheck_avaliacao {
  softcheck_avaliacao_id         Int             @id @unique(map: "softcheck_avaliacao_id") @default(autoincrement())
  softcheck_avaliacao_valor      String?         @db.Text
  softcheck_item_id              Int
  usuario_id                     Int
  usuario_tipo                   String          @db.Text
  aluno_id                       Int
  turma_id                       Int
  softcheck_dthr                 DateTime        @default(now()) @db.DateTime(0)
  softcheck_avaliacao_created_at DateTime        @default(now()) @db.DateTime(0)
  aluno                          aluno           @relation(fields: [aluno_id], references: [aluno_id], onUpdate: Restrict, map: "softcheck_avaliacao_ibfk_1")
  softcheck_turma                softcheck_turma @relation(fields: [turma_id], references: [softcheck_turma_id], onUpdate: Restrict, map: "softcheck_avaliacao_ibfk_2")
  softcheck_item                 softcheck_item  @relation(fields: [softcheck_item_id], references: [softcheck_item_id], onUpdate: Restrict, map: "softcheck_avaliacao_ibfk_3")

  @@index([aluno_id], map: "aluno_id")
  @@index([softcheck_item_id], map: "softcheck_item_id")
  @@index([turma_id], map: "turma_id")
}

model softcheck_grupo {
  softcheck_grupo_id         Int      @id @default(autoincrement())
  grupo_codigo               String   @db.Text
  turma_id                   Int
  maior_impacto              Int?
  softcheck_grupo_created_at DateTime @default(now()) @db.DateTime(0)
  softcheck_grupo_updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([turma_id], map: "turma_id")
}

model softcheck_grupo_aluno {
  softcheck_grupo_aluno_id         Int                                      @id @default(autoincrement())
  aluno_id                         Int
  grupo_id                         Int
  aluno_grupo_status               Int                                      @default(1)
  aluno_grupo_anjo                 Int                                      @default(0)
  aluno_com_projeto                softcheck_grupo_aluno_aluno_com_projeto? @default(S)
  softcheck_dthr_update            DateTime                                 @default(now()) @db.DateTime(0)
  softcheck_grupo_aluno_created_at DateTime                                 @default(now()) @db.DateTime(0)
  rastreio_kit                     rastreio_kit[]

  @@index([aluno_id], map: "aluno_id")
  @@index([grupo_id], map: "grupo_id")
}

model softcheck_grupo_aluno_days {
  softcheck_grupo_aluno_id Int      @id @default(autoincrement())
  aluno_id                 Int
  grupo_id                 Int
  turma_id                 Int
  day                      Int?     @default(0)
  softcheck_dthr_update    DateTime @default(now()) @db.DateTime(0)
  aluno_days_created_at    DateTime @default(now()) @db.DateTime(0)

  @@index([aluno_id], map: "aluno_id")
  @@index([day], map: "day_idx")
  @@index([grupo_id], map: "softcheck_grupo_aluno_days_ibfk_2")
  @@index([turma_id], map: "turma_id")
}

model softcheck_grupo_aluno_days_log {
  softcheck_grupo_aluno_id  Int      @id @default(autoincrement())
  aluno_id                  Int
  grupo_id                  Int
  turma_id                  Int
  day                       Int      @default(0)
  versao                    Int      @default(0)
  softcheck_dthr_update     DateTime @default(now()) @db.DateTime(0)
  aluno_days_log_created_at DateTime @default(now()) @db.DateTime(0)
}

model softcheck_grupo_days {
  softcheck_grupo_id              Int      @id @default(autoincrement())
  grupo_codigo                    String   @db.Text
  turma_id                        Int
  day                             Int      @default(0)
  maior_impacto                   Int?
  softcheck_grupo_days_created_at DateTime @default(now()) @db.DateTime(0)
  softcheck_grupo_days_updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([turma_id], map: "turma_id")
}

model softcheck_grupo_days_log {
  softcheck_grupo_id                  Int      @id @default(autoincrement())
  grupo_codigo                        String   @db.Text
  turma_id                            Int
  day                                 Int      @default(0)
  versao                              Int      @default(0)
  maior_impacto                       Int?
  softcheck_grupo_days_log_created_at DateTime @default(now()) @db.DateTime(0)
  softcheck_grupo_days_log_updated_at DateTime @default(now()) @db.DateTime(0)
}

model softcheck_item {
  softcheck_item_id         Int                   @id @default(autoincrement())
  softcheck_item_titulo     String                @db.Text
  softcheck_tipo_id         Int
  softcheck_item_created_at DateTime              @default(now()) @db.DateTime(0)
  softcheck_item_updated_at DateTime              @default(now()) @db.DateTime(0)
  softcheck_avaliacao       softcheck_avaliacao[]
}

model softcheck_profissional {
  softcheck_profissional_id         Int               @id @default(autoincrement())
  softcheck_profissional_nome       String            @db.Text
  softcheck_profissional_cpf        String            @db.Text
  softcheck_profissional_tipo       Int
  softcheck_profissional_created_at DateTime          @default(now()) @db.DateTime(0)
  softcheck_profissional_updated_at DateTime          @default(now()) @db.DateTime(0)
  npa_facilitador                   npa_facilitador[]
}

model softcheck_tipo {
  softcheck_tipo_id         Int                              @id @default(autoincrement())
  softcheck_ordem           Int?
  softcheck_tipo_titulo     String                           @db.Text
  treinamento_id            Int
  softcheck_status          softcheck_tipo_softcheck_status? @default(L)
  softcheck_tipo_created_at DateTime                         @default(now()) @db.DateTime(0)
  softcheck_tipo_updated_at DateTime                         @default(now()) @db.DateTime(0)
  treinamento               treinamento                      @relation(fields: [treinamento_id], references: [treinamento_id], onUpdate: Restrict, map: "softcheck_tipo_ibfk_1")

  @@index([treinamento_id], map: "treinamento_id")
}

model softcheck_turma {
  softcheck_turma_id                       Int                                       @id @default(autoincrement())
  softcheck_turma_codigo                   String                                    @db.Text
  agenda_id                                Int
  link_uteis                               String?                                   @db.VarChar(255)
  turma_nome                               String?                                   @db.VarChar(255)
  fator_multiplicativo_prova_intermediaria Float?                                    @db.Float
  fator_multiplicativo_prova_final         Float?                                    @db.Float
  softcheck_data_certificado_final         String?                                   @db.VarChar(255)
  softcheck_background_certificado         String?                                   @db.Text
  softcheck_carga_horaria_certificado      String?                                   @db.VarChar(100)
  softcheck_executa_ranking                DateTime?                                 @db.DateTime(0)
  softcheck_bloqueia_ranking               DateTime?                                 @db.DateTime(0)
  softcheck_libera_ranking                 softcheck_turma_softcheck_libera_ranking? @default(NL)
  versao_id                                Int?
  turma_data_criacao                       DateTime?                                 @default(now()) @db.DateTime(0)
  turma_data_update                        DateTime?                                 @default(now()) @db.DateTime(0)
  npa_facilitador                          npa_facilitador[]
  softcheck_avaliacao                      softcheck_avaliacao[]
  agenda                                   agenda                                    @relation(fields: [agenda_id], references: [agenda_id], onUpdate: Restrict, map: "softcheck_turma_ibfk_1")
  lms_versionamento                        lms_versionamento?                        @relation(fields: [versao_id], references: [versao_id], onDelete: Restrict, onUpdate: Restrict, map: "softcheck_turma_ibfk_2")

  @@index([agenda_id], map: "agenda_id")
  @@index([softcheck_turma_codigo(length: 50)], map: "softcheck_turma_codigo")
  @@index([versao_id], map: "versao_id")
}

model softcheck_turma_agenda {
  turma_agenda_id                   Int      @id @unique(map: "turma_agenda_id") @default(autoincrement())
  agenda_id                         Int
  turma_id                          Int
  softcheck_turma_agenda_created_at DateTime @default(now()) @db.DateTime(0)
  softcheck_turma_agenda_updated_at DateTime @default(now()) @db.DateTime(0)
}

model sup_estornos {
  sup_estorno_card_id                     Int       @id
  sup_estorno_fase                        String?   @db.VarChar(300)
  sup_estorno_agente_responsavel          String?   @db.VarChar(1000)
  sup_estorno_label                       String?   @db.VarChar(1500)
  sup_estorno_nome                        String?   @db.VarChar(1000)
  sup_estorno_cpf                         String?   @db.VarChar(300)
  sup_estorno_email                       String?   @db.VarChar(1000)
  sup_estorno_forma_pag                   String?   @db.VarChar(300)
  sup_estorno_valor_multa                 Decimal?  @db.Decimal(15, 2)
  sup_estorno_valor_investido             Decimal?  @db.Decimal(15, 2)
  sup_estorno_valor_aprovado              Decimal?  @db.Decimal(15, 2)
  sup_estorno_nome_curso                  String?   @db.VarChar(100)
  sup_estorno_agenda_id                   Int?
  sup_estorno_turma_codigo                String?   @db.VarChar(100)
  sup_estorno_carrinho_id                 Int?
  sup_estorno_momento_solicitacao         String?   @db.VarChar(300)
  sup_estorno_contratacao_garantida       String?   @db.VarChar(100)
  sup_estorno_motivo_estorno              String?   @db.VarChar(300)
  sup_estorno_comentarios                 String?   @db.Text
  sup_estorno_criado_em                   DateTime? @db.DateTime(0)
  sup_estorno_data_contato                DateTime? @db.DateTime(0)
  sup_estorno_data_negociacao             DateTime? @db.DateTime(0)
  sup_estorno_data_condicoes              DateTime? @db.DateTime(0)
  sup_estorno_data_aprovacao              DateTime? @db.DateTime(0)
  sup_estorno_data_cancelamento_realizado DateTime? @db.DateTime(0)
  sup_estorno_data_cancelamento_revertido DateTime? @db.DateTime(0)
  sup_estorno_log_fases                   String?   @db.VarChar(200)
  sup_estornos_created_at                 DateTime  @default(now()) @db.DateTime(0)
  sup_estornos_updated_at                 DateTime  @default(now()) @db.DateTime(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model tabela_squad_growth {
  inteiro    Int?
  string     String?   @db.VarChar(1000)
  dia        DateTime? @db.DateTime(0)
  boleana    Boolean?
  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.DateTime(0)

  @@ignore
}

model treinamento {
  treinamento_id                      Int                                  @id @default(autoincrement())
  treinamento_nome                    String                               @db.Text
  treinamento_descricao               String?                              @db.VarChar(255)
  treinamento_vista                   String?                              @db.Text
  treinamento_prazo                   String                               @db.Text
  vista_ead                           String?                              @default("0") @db.VarChar(100)
  prazo_ead                           String?                              @default("0") @db.VarChar(100)
  vista_early                         String?                              @db.VarChar(100)
  prazo_early                         String?                              @db.VarChar(100)
  vista_ead_early                     String?                              @db.VarChar(100)
  prazo_ead_early                     String?                              @db.VarChar(100)
  treinamento_carga                   Int
  treinamento_carga_online            Int?
  treinamento_pdf                     String?                              @db.VarChar(600)
  treinamento_url                     String?                              @db.VarChar(600)
  treinamento_material                String?                              @db.Text
  treinamento_tipo                    Int
  status                              Int                                  @default(1)
  treinamento_imagem                  String?                              @db.Text
  treinamento_nota_minima             Int?                                 @default(70)
  treinamento_certificado             Int?
  treinamento_certificados_quantidade Int?
  treinamento_categoria               Int                                  @default(0)
  treinamento_injeta_provi            treinamento_treinamento_injeta_provi @default(N)
  treinamento_provi_cupom             String?                              @db.VarChar(100)
  provi_course_id                     Int?
  treinamento_created_at              DateTime                             @default(now()) @db.DateTime(0)
  treinamento_updated_at              DateTime                             @default(now()) @db.DateTime(0)
  agenda                              agenda[]
  certificado_configuracao            certificado_configuracao[]
  indique                             indique[]
  lms_curso                           lms_curso[]
  lms_treinamento_habilitado          lms_treinamento_habilitado[]
  npa_deliverables                    npa_deliverables[]
  score_prova_tipo                    score_prova_tipo[]
  softcheck_tipo                      softcheck_tipo[]
}

model zendesk_groups {
  group_id                  BigInt    @id @default(autoincrement())
  name                      String?   @db.VarChar(500)
  is_default                Int?
  deleted                   Int?
  criado_em                 DateTime? @db.DateTime(0)
  atualizado_em             DateTime? @db.DateTime(0)
  zendesk_groups_created_at DateTime  @default(now()) @db.DateTime(0)
  zendesk_groups_updated_at DateTime  @default(now()) @db.DateTime(0)
}

model zendesk_metrics {
  ticket_metric_id                 BigInt    @id @default(autoincrement())
  ticket_id                        Int?
  reaberturas                      Int?
  respostas                        Int?
  tempo_resposta_minutos           Int?
  tempo_resposta_minutos_uteis     Int?
  primeira_resolucao_minutos       Int?
  primeira_resolucao_minutos_uteis Int?
  resolucao_total_minutos          Int?
  resolucao_total_minutos_uteis    Int?
  espera_agente_minutos            Int?
  espera_agente_minutos_uteis      Int?
  espera_solicitante_minutos       Int?
  espera_solicitante_minutos_uteis Int?
  tempo_espera_minutos             Int?
  tempo_espera_minutos_uteis       Int?
  criado_em                        DateTime? @db.DateTime(0)
  atualizado_em                    DateTime? @db.DateTime(0)
  zendesk_metrics_created_at       DateTime  @default(now()) @db.DateTime(0)
  zendesk_metrics_updated_at       DateTime  @default(now()) @db.DateTime(0)

  @@index([atualizado_em], map: "atualizado_em_idx")
  @@index([criado_em], map: "criado_em_idx")
}

model zendesk_tickets {
  ticket_id                  Int       @id @default(autoincrement())
  channel                    String?   @db.VarChar(300)
  status                     String?   @db.VarChar(300)
  tags                       String?   @db.VarChar(2000)
  classificacao              String?   @db.VarChar(300)
  assunto                    String?   @db.MediumText
  descricao                  String?   @db.MediumText
  user_id_agente             BigInt?
  user_id_solicitante        BigInt?
  group_id                   BigInt?
  criado_em                  DateTime? @db.DateTime(0)
  atualizado_em              DateTime? @db.DateTime(0)
  url                        String?   @db.VarChar(1000)
  zendesk_tickets_created_at DateTime  @default(now()) @db.DateTime(0)
  zendesk_tickets_updated_at DateTime  @default(now()) @db.DateTime(0)

  @@index([atualizado_em], map: "atualizado_em_idx")
  @@index([criado_em], map: "criado_em_idx")
  @@index([group_id], map: "group_id")
  @@index([user_id_agente], map: "user_id_agente_idx")
  @@index([user_id_solicitante], map: "user_id_solicitante_idx")
}

model zendesk_users {
  user_id                  BigInt    @id @default(autoincrement())
  nome                     String?   @db.VarChar(1000)
  email                    String?   @db.VarChar(1000)
  telefone                 String?   @db.VarChar(300)
  local                    String?   @db.VarChar(300)
  role                     String?   @db.VarChar(300)
  ativo                    Int?
  ultimo_login             DateTime? @db.DateTime(0)
  suspenso                 Int?
  criado_em                DateTime? @db.DateTime(0)
  atualizado_em            DateTime? @db.DateTime(0)
  url                      String?   @db.VarChar(1000)
  zendesk_users_created_at DateTime  @default(now()) @db.DateTime(0)
  zendesk_users_updated_at DateTime  @default(now()) @db.DateTime(0)

  @@index([atualizado_em], map: "atualizado_em_idx")
  @@index([criado_em], map: "criado_em_idx")
  @@index([email(length: 768)], map: "email_idx")
  @@index([nome(length: 768)], map: "nome_idx")
}

model hubspot_call_activities {
  call_id         BigInt    @id
  deal_id         BigInt?
  activity_type   String?   @db.VarChar(50)
  call_direction  String?   @db.VarChar(50)
  call_duration   Int?
  call_status     String?   @db.VarChar(50)
  call_date       DateTime? @db.DateTime(0)
  call_created_at DateTime  @default(now()) @db.DateTime(0)
  call_updated_at DateTime  @default(now()) @db.DateTime(0)

  @@index([deal_id], map: "FK_call_deal_1")
}

model hubspot_owner_activity {
  owner_activity_id         Int            @id @default(autoincrement())
  deal_id                   BigInt?
  hubspot_owner_id          Int?
  activity_type             String?        @db.VarChar(20)
  activity_date             DateTime?      @db.DateTime(0)
  owner_activity_created_at DateTime?      @default(now()) @db.DateTime(0)
  owner_activity_updated_at DateTime       @default(now()) @db.DateTime(0)
  hubspot_deal              hubspot_deal?  @relation(fields: [deal_id], references: [deal_id], onDelete: NoAction, onUpdate: NoAction, map: "hubspot_owner_activity_relation_1")
  hubspot_owner             hubspot_owner? @relation(fields: [hubspot_owner_id], references: [hubspot_owner_id], onDelete: NoAction, onUpdate: NoAction, map: "hubspot_owner_activity_relation_2")

  @@index([deal_id], map: "hubspot_owner_activity_relation_1")
  @@index([hubspot_owner_id], map: "hubspot_owner_activity_relation_2")
}

model lms_comunicados_curtidas {
  curtida_id    Int @id @default(autoincrement())
  aluno_id      Int
  comunicado_id Int
  curso_id      Int
}

model lms_comunicados_turma {
  comunicado_id           Int       @id @default(autoincrement())
  turma_id                Int
  comunicado              String    @db.VarChar(401)
  quantidade_like         Int?
  comunicado_data_created DateTime? @default(now()) @db.DateTime(0)
  comunicado_data_updated DateTime? @default(now()) @db.DateTime(0)
  comunicado_turma        String    @db.VarChar(20)
  comunicado_curso        String?   @db.VarChar(70)
  comunicado_curso_id     Int?
  curtida_data_created    DateTime? @default(now()) @db.DateTime(0)
  curtida_data_updated    DateTime? @default(now()) @db.DateTime(0)

  @@index([turma_id], map: "fk_turma_comunicados")
}

enum agenda_versao_versao_tipo {
  F
  S
}

enum controle_geral_controle_aviso_provas {
  L
  NL
}

enum dnc_dashtv_urls_dashtv_tipo {
  METABASE
  IFRAME
  IMAGEM
}

enum rd_log_curso_gratuito_log_aluno_status {
  E
  NE
}

enum agenda_versao_versao_status {
  L
  NL
}

enum controle_geral_controle_libera_prova {
  L
  NL
}

enum dnc_privilegios_acesso_privilegio_status {
  L
  LE
  LX
  A
  N
}

enum dnc_profissionais_profissional_categoria {
  Interno
  Externo
}

enum lobby_conferencia_lobby_status {
  L
  NL
}

enum lobby_sala_sala_status {
  L
  NL
}

enum presenca_masp_agendada_status_agendamento {
  A
  E
}

enum rd_log_curso_gratuito_log_operacao_status {
  C
  NC
}

enum acervo_certificados_novo_aluno_com_projeto {
  S
  N
}

enum controle_geral_controle_atualizacao_presencas {
  L
  NL
}

enum dnc_privilegios_acesso_privilegio_admin {
  L
  LE
  LX
  A
  N
}

enum dnc_profissionais_profissional_staff {
  S
  N
}

enum rd_log_curso_gratuito_log_identificador_status {
  E
  NE
}

enum softcheck_tipo_softcheck_status {
  L
  NL
}

enum acervo_certificados_novo_aluno_status {
  Ativo
  Inativo
  Trancado
}

enum controle_geral_controle_atualizacao_ranking {
  L
  NL
}

enum dnc_dashtv_urls_dashtv_status {
  L
  NL
}

enum dnc_privilegios_acesso_privilegio_financeiro {
  L
  LE
  LX
  A
  N
}

enum frm_material_controle_material_controle_status {
  L
  NL
}

enum softcheck_grupo_aluno_aluno_com_projeto {
  S
  N
}

enum controle_geral_controle_popula_certificado {
  L
  NL
}

enum dnc_empresa_nfe_empresa_nfe_simples_nacional {
  true
  false
}

enum dnc_privilegios_acesso_privilegio_operacoes {
  L
  LE
  LX
  A
  N
}

enum acervo_certificados_novo_atingiu_meta_assignments {
  S
  N
}

enum controle_geral_controle_exibicao_turma {
  L
  NL
}

enum dnc_dashtv_configuracao_dashtv_status {
  L
  NL
  P
}

enum dnc_privilegios_acesso_privilegio_produto {
  L
  LE
  LX
  A
  N
}

enum score_prova_tipo_prova_categoria {
  I
  F
}

enum controle_geral_controle_exec_scripts {
  BLOCKED
  OK
}

enum dnc_privilegios_acesso_privilegio_tech {
  L
  LE
  LX
  A
  N
}

enum frm_code_response_code_status {
  Sucesso
  Erro
  Falha
}

enum acervo_certificados_novo_participou_banca {
  S
  N
}

enum data_data_tipo_dinamica {
  Individual
  Grupo
}

enum dnc_empresa_nfe_empresa_nfe_incentivador_cultural {
  true
  false
}

enum acervo_certificados_novo_respondeu_nps {
  S
  N
}

enum data_data_tipo_grupo {
  Projeto
  Aleatorio
}

enum acervo_certificados_novo_atingiu_meta_certificados {
  S
  N
}

enum softcheck_turma_softcheck_libera_ranking {
  L
  NL
}

enum acervo_certificados_novo_atingiu_meta_presencas {
  S
  N
}

enum acervo_certificados_novo_stamp_projeto_excelencia {
  S
  N
}

enum acervo_certificados_novo_stamp_maior_impacto {
  S
  N
}

enum carrinho_carrinho_status_notafiscal {
  Gerada
  N_o_Gerada @map("Não Gerada")
  Falha
}

enum acervo_certificados_novo_stamp_top_3_projetos {
  S
  N
}

enum acervo_certificados_novo_stamp_alunos_honra {
  S
  N
}

enum presencas_presenca_status {
  L
  NL
}

enum score_ranking_ranking_status {
  S
  N
}

enum acervo_certificados_novo_stamp_alunos_excelencia {
  S
  N
}

enum treinamento_treinamento_injeta_provi {
  S
  N
}

enum acervo_certificados_novo_stamp_top_10_alunos {
  S
  N
}

enum acervo_certificados_novo_stamp_top_5_alunos {
  S
  N
}

enum acervo_certificados_novo_stamp_top_3_alunos {
  S
  N
}

enum acervo_certificados_novo_stamp_top1 {
  S
  N
}

enum acervo_certificados_novo_certificado_final_liberado {
  S
  N
}

enum dnc_profissionais_profissional_status {
  A
  I
}

enum score_ranking_maior_impacto {
  one @map("1")
  zero @map("0")
}

enum lms_notificacao_notificacao_categoria {
  one @map("1")
  two @map("2")
}
